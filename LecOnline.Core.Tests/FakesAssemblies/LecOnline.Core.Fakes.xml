<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LecOnline.Core.Fakes</name>
    </assembly>
    <members>
        <member name="T:LecOnline.Core.Fakes.ShimActionDescription">
            <summary>Тип оболочки совместимости для LecOnline.Core.ActionDescription</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionDescription.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionDescription.#ctor(LecOnline.Core.ActionDescription)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionDescription.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionDescription.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.ActionGet">
            <summary>Задает оболочка совместимости ActionDescription.get_Action()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.ActionSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_Action(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.Constructor">
            <summary>Задает оболочка совместимости ActionDescription.ActionDescription()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.ControllerGet">
            <summary>Задает оболочка совместимости ActionDescription.get_Controller()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.ControllerSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_Controller(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.CssClassGet">
            <summary>Задает оболочка совместимости ActionDescription.get_CssClass()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.CssClassSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_CssClass(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.IconGet">
            <summary>Задает оболочка совместимости ActionDescription.get_Icon()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.IconSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_Icon(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.IdGet">
            <summary>Задает оболочка совместимости ActionDescription.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.IdSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_Id(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.NotItemOperationGet">
            <summary>Задает оболочка совместимости ActionDescription.get_NotItemOperation()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.NotItemOperationSetBoolean">
            <summary>Задает оболочка совместимости ActionDescription.set_NotItemOperation(Boolean value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.RouteParametersGet">
            <summary>Задает оболочка совместимости ActionDescription.get_RouteParameters()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.RouteParametersSetObject">
            <summary>Задает оболочка совместимости ActionDescription.set_RouteParameters(Object value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.SmallCssClassGet">
            <summary>Задает оболочка совместимости ActionDescription.get_SmallCssClass()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.SmallCssClassSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_SmallCssClass(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.SortOrderGet">
            <summary>Задает оболочка совместимости ActionDescription.get_SortOrder()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.SortOrderSetInt32">
            <summary>Задает оболочка совместимости ActionDescription.set_SortOrder(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.TextGet">
            <summary>Задает оболочка совместимости ActionDescription.get_Text()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.TextSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_Text(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimActionDescription.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.ActionGet">
            <summary>Задает оболочка совместимости ActionDescription.get_Action()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.ActionSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_Action(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.ControllerGet">
            <summary>Задает оболочка совместимости ActionDescription.get_Controller()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.ControllerSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_Controller(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.CssClassGet">
            <summary>Задает оболочка совместимости ActionDescription.get_CssClass()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.CssClassSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_CssClass(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.IconGet">
            <summary>Задает оболочка совместимости ActionDescription.get_Icon()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.IconSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_Icon(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.IdGet">
            <summary>Задает оболочка совместимости ActionDescription.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.IdSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_Id(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.NotItemOperationGet">
            <summary>Задает оболочка совместимости ActionDescription.get_NotItemOperation()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.NotItemOperationSetBoolean">
            <summary>Задает оболочка совместимости ActionDescription.set_NotItemOperation(Boolean value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.RouteParametersGet">
            <summary>Задает оболочка совместимости ActionDescription.get_RouteParameters()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.RouteParametersSetObject">
            <summary>Задает оболочка совместимости ActionDescription.set_RouteParameters(Object value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.SmallCssClassGet">
            <summary>Задает оболочка совместимости ActionDescription.get_SmallCssClass()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.SmallCssClassSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_SmallCssClass(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.SortOrderGet">
            <summary>Задает оболочка совместимости ActionDescription.get_SortOrder()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.SortOrderSetInt32">
            <summary>Задает оболочка совместимости ActionDescription.set_SortOrder(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.TextGet">
            <summary>Задает оболочка совместимости ActionDescription.get_Text()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionDescription.AllInstances.TextSetString">
            <summary>Задает оболочка совместимости ActionDescription.set_Text(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimActionsManager">
            <summary>Тип оболочки совместимости для LecOnline.Core.ActionsManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionsManager.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionsManager.#ctor(LecOnline.Core.ActionsManager)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionsManager.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionsManager.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionsManager.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionsManager.IsOperationAllowedOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Boolean})">
            <summary>Задает оболочка совместимости ActionsManager.IsOperationAllowed(String commandId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.ConstructorFuncOfClaimsPrincipal">
            <summary>Задает оболочка совместимости ActionsManager.ActionsManager(Func`1&lt;ClaimsPrincipal&gt; userBuilder)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.Dispose">
            <summary>Задает оболочка совместимости ActionsManager.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.GetActionsObject">
            <summary>Задает оболочка совместимости ActionsManager.GetActions(Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.GetProvidersObject">
            <summary>Задает оболочка совместимости ActionsManager.GetProviders(Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.IsOperationAllowedStringObject">
            <summary>Задает оболочка совместимости ActionsManager.IsOperationAllowed(String commandId, Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.RegisterProviderIActionProvider">
            <summary>Задает оболочка совместимости ActionsManager.RegisterProvider(IActionProvider provider)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.UserGet">
            <summary>Задает оболочка совместимости ActionsManager.get_User()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.UserSetLazyOfClaimsPrincipal">
            <summary>Задает оболочка совместимости ActionsManager.set_User(Lazy`1&lt;ClaimsPrincipal&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimActionsManager.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimActionsManager.AllInstances.IsOperationAllowedOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LecOnline.Core.ActionsManager,System.String,System.Boolean})">
            <summary>Задает оболочка совместимости ActionsManager.IsOperationAllowed(String commandId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.AllInstances.Dispose">
            <summary>Задает оболочка совместимости ActionsManager.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.AllInstances.GetActionsObject">
            <summary>Задает оболочка совместимости ActionsManager.GetActions(Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.AllInstances.GetProvidersObject">
            <summary>Задает оболочка совместимости ActionsManager.GetProviders(Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.AllInstances.IsOperationAllowedStringObject">
            <summary>Задает оболочка совместимости ActionsManager.IsOperationAllowed(String commandId, Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.AllInstances.RegisterProviderIActionProvider">
            <summary>Задает оболочка совместимости ActionsManager.RegisterProvider(IActionProvider provider)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.AllInstances.UserGet">
            <summary>Задает оболочка совместимости ActionsManager.get_User()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimActionsManager.AllInstances.UserSetLazyOfClaimsPrincipal">
            <summary>Задает оболочка совместимости ActionsManager.set_User(Lazy`1&lt;ClaimsPrincipal&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimApplicationDbContext">
            <summary>Тип оболочки совместимости для LecOnline.Core.ApplicationDbContext</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationDbContext.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationDbContext.#ctor(LecOnline.Core.ApplicationDbContext)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationDbContext.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationDbContext.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationDbContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationDbContext.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationDbContext.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationDbContext.Constructor">
            <summary>Задает оболочка совместимости ApplicationDbContext.ApplicationDbContext()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationDbContext.Create">
            <summary>Задает оболочка совместимости ApplicationDbContext.Create()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimApplicationDbContext.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimApplicationUser">
            <summary>Тип оболочки совместимости для LecOnline.Core.ApplicationUser</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUser.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUser.#ctor(LecOnline.Core.ApplicationUser)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUser.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUser.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUser.Bind(Microsoft.AspNet.Identity.IUser)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUser.Bind(Microsoft.AspNet.Identity.IUser{System.String})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AddressGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Address()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AddressSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_Address(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.CityGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_City()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.CitySetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_City(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.ClientIdGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_ClientId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.ClientIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости ApplicationUser.set_ClientId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.CommitteeIdGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_CommitteeId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.CommitteeIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости ApplicationUser.set_CommitteeId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.CompanyGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Company()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.CompanySetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_Company(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.Constructor">
            <summary>Задает оболочка совместимости ApplicationUser.ApplicationUser()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.ContactPhoneGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_ContactPhone()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.ContactPhoneSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_ContactPhone(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.CreatedGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Created()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.CreatedSetDateTime">
            <summary>Задает оболочка совместимости ApplicationUser.set_Created(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.DegreeGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Degree()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.DegreeSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_Degree(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.FirstNameGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_FirstName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.FirstNameSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_FirstName(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.FullNameGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_FullName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.GenerateUserIdentityAsyncUserManagerOfApplicationUser">
            <summary>Задает оболочка совместимости ApplicationUser.GenerateUserIdentityAsync(UserManager`1&lt;ApplicationUser&gt; manager)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.InitialsGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Initials()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.LastNameGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_LastName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.LastNameSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_LastName(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.ModifiedGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Modified()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.ModifiedSetDateTime">
            <summary>Задает оболочка совместимости ApplicationUser.set_Modified(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.PatronymicNameGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_PatronymicName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.PatronymicNameSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_PatronymicName(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.ShortFullNameGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_ShortFullName()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.AddressGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Address()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.AddressSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_Address(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.CityGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_City()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.CitySetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_City(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.ClientIdGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_ClientId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.ClientIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости ApplicationUser.set_ClientId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.CommitteeIdGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_CommitteeId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.CommitteeIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости ApplicationUser.set_CommitteeId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.CompanyGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Company()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.CompanySetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_Company(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.ContactPhoneGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_ContactPhone()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.ContactPhoneSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_ContactPhone(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.CreatedGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Created()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.CreatedSetDateTime">
            <summary>Задает оболочка совместимости ApplicationUser.set_Created(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.DegreeGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Degree()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.DegreeSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_Degree(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.FirstNameGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_FirstName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.FirstNameSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_FirstName(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.FullNameGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_FullName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.GenerateUserIdentityAsyncUserManagerOfApplicationUser">
            <summary>Задает оболочка совместимости ApplicationUser.GenerateUserIdentityAsync(UserManager`1&lt;ApplicationUser&gt; manager)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.InitialsGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Initials()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.LastNameGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_LastName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.LastNameSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_LastName(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.ModifiedGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_Modified()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.ModifiedSetDateTime">
            <summary>Задает оболочка совместимости ApplicationUser.set_Modified(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.PatronymicNameGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_PatronymicName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.PatronymicNameSetString">
            <summary>Задает оболочка совместимости ApplicationUser.set_PatronymicName(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUser.AllInstances.ShortFullNameGet">
            <summary>Задает оболочка совместимости ApplicationUser.get_ShortFullName()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimApplicationUserManager">
            <summary>Тип оболочки совместимости для LecOnline.Core.ApplicationUserManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUserManager.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUserManager.#ctor(LecOnline.Core.ApplicationUserManager)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUserManager.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUserManager.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimApplicationUserManager.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.ConstructorIUserStoreOfApplicationUser">
            <summary>Задает оболочка совместимости ApplicationUserManager.ApplicationUserManager(IUserStore`1&lt;ApplicationUser&gt; store)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.CreateAsyncApplicationUser">
            <summary>Задает оболочка совместимости ApplicationUserManager.CreateAsync(ApplicationUser user)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.FilterUsersIQueryableOfApplicationUserClaimsPrincipal">
            <summary>Задает оболочка совместимости ApplicationUserManager.FilterUsers(IQueryable`1&lt;ApplicationUser&gt; users, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.GetAccessibleUsersClaimsPrincipal">
            <summary>Задает оболочка совместимости ApplicationUserManager.GetAccessibleUsers(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.GetClientMembersInt32">
            <summary>Задает оболочка совместимости ApplicationUserManager.GetClientMembers(Int32 clientId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.GetCommitteeMembersClaimsPrincipalInt32">
            <summary>Задает оболочка совместимости ApplicationUserManager.GetCommitteeMembers(ClaimsPrincipal principal, Int32 committeeId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.GetCommitteeMembersInt32">
            <summary>Задает оболочка совместимости ApplicationUserManager.GetCommitteeMembers(Int32 committeeId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.GetManagedRolesIPrincipal">
            <summary>Задает оболочка совместимости ApplicationUserManager.GetManagedRoles(IPrincipal user)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.UpdateAsyncApplicationUser">
            <summary>Задает оболочка совместимости ApplicationUserManager.UpdateAsync(ApplicationUser user)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager._n__FabricatedMethod2ApplicationUser">
            <summary>Задает оболочка совместимости ApplicationUserManager.&lt;&gt;n__FabricatedMethod2(ApplicationUser )</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimApplicationUserManager.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.AllInstances.CreateAsyncApplicationUser">
            <summary>Задает оболочка совместимости ApplicationUserManager.CreateAsync(ApplicationUser user)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.AllInstances.GetAccessibleUsersClaimsPrincipal">
            <summary>Задает оболочка совместимости ApplicationUserManager.GetAccessibleUsers(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.AllInstances.GetClientMembersInt32">
            <summary>Задает оболочка совместимости ApplicationUserManager.GetClientMembers(Int32 clientId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.AllInstances.GetCommitteeMembersClaimsPrincipalInt32">
            <summary>Задает оболочка совместимости ApplicationUserManager.GetCommitteeMembers(ClaimsPrincipal principal, Int32 committeeId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.AllInstances.GetCommitteeMembersInt32">
            <summary>Задает оболочка совместимости ApplicationUserManager.GetCommitteeMembers(Int32 committeeId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.AllInstances.UpdateAsyncApplicationUser">
            <summary>Задает оболочка совместимости ApplicationUserManager.UpdateAsync(ApplicationUser user)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimApplicationUserManager.AllInstances._n__FabricatedMethod2ApplicationUser">
            <summary>Задает оболочка совместимости ApplicationUserManager.&lt;&gt;n__FabricatedMethod2(ApplicationUser )</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimChangeManager">
            <summary>Тип оболочки совместимости для LecOnline.Core.ChangeManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManager.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManager.#ctor(LecOnline.Core.ChangeManager)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManager.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManager.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManager.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.ChangedPropertiesDictionaryOfStringTupleOfObjectObject">
            <summary>Задает оболочка совместимости ChangeManager.ChangedProperties(Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.ConstructorIChangeManagerStore">
            <summary>Задает оболочка совместимости ChangeManager.ChangeManager(IChangeManagerStore store)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.CurrentPropertiesDictionaryOfStringTupleOfObjectObject">
            <summary>Задает оболочка совместимости ChangeManager.CurrentProperties(Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.Dispose">
            <summary>Задает оболочка совместимости ChangeManager.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.DisposeBoolean">
            <summary>Задает оболочка совместимости ChangeManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.FilterRequestsIQueryableOfChangesLogClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.FilterRequests(IQueryable`1&lt;ChangesLog&gt; logEntries, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.OriginalPropertiesDictionaryOfStringTupleOfObjectObject">
            <summary>Задает оболочка совместимости ChangeManager.OriginalProperties(Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterAsyncChangesLog">
            <summary>Задает оболочка совместимости ChangeManager.RegisterAsync(ChangesLog logEntry)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterRequestAcceptedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestAcceptedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterRequestChangedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestChangedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterRequestCreatedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestCreatedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterRequestDeletedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestDeletedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterRequestDocumentationCreatedAsyncRequestRequestDocumentationDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestDocumentationCreatedAsync(Request request, RequestDocumentation documentation, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterRequestDocumentationDeletedAsyncRequestRequestDocumentationDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestDocumentationDeletedAsync(Request request, RequestDocumentation documentation, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterRequestRejectedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestRejectedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterRequestRevokedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestRevokedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterRequestSubmittedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestSubmittedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.RegisterVotingStartedAsyncMeetingClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterVotingStartedAsync(Meeting meeting, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.ThrowIfDisposed">
            <summary>Задает оболочка совместимости ChangeManager.ThrowIfDisposed()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimChangeManager.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.ChangedPropertiesDictionaryOfStringTupleOfObjectObject">
            <summary>Задает оболочка совместимости ChangeManager.ChangedProperties(Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.CurrentPropertiesDictionaryOfStringTupleOfObjectObject">
            <summary>Задает оболочка совместимости ChangeManager.CurrentProperties(Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.Dispose">
            <summary>Задает оболочка совместимости ChangeManager.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости ChangeManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.OriginalPropertiesDictionaryOfStringTupleOfObjectObject">
            <summary>Задает оболочка совместимости ChangeManager.OriginalProperties(Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterAsyncChangesLog">
            <summary>Задает оболочка совместимости ChangeManager.RegisterAsync(ChangesLog logEntry)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterRequestAcceptedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestAcceptedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterRequestChangedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestChangedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterRequestCreatedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestCreatedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterRequestDeletedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestDeletedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterRequestDocumentationCreatedAsyncRequestRequestDocumentationDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestDocumentationCreatedAsync(Request request, RequestDocumentation documentation, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterRequestDocumentationDeletedAsyncRequestRequestDocumentationDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestDocumentationDeletedAsync(Request request, RequestDocumentation documentation, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterRequestRejectedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestRejectedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterRequestRevokedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestRevokedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterRequestSubmittedAsyncRequestDictionaryOfStringTupleOfObjectObjectClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterRequestSubmittedAsync(Request request, Dictionary`2&lt;String,Tuple`2&lt;Object,Object&gt;&gt; changed, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.RegisterVotingStartedAsyncMeetingClaimsPrincipal">
            <summary>Задает оболочка совместимости ChangeManager.RegisterVotingStartedAsync(Meeting meeting, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManager.AllInstances.ThrowIfDisposed">
            <summary>Задает оболочка совместимости ChangeManager.ThrowIfDisposed()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimChangeManagerStore">
            <summary>Тип оболочки совместимости для LecOnline.Core.ChangeManagerStore</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManagerStore.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManagerStore.#ctor(LecOnline.Core.ChangeManagerStore)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManagerStore.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManagerStore.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManagerStore.Bind(LecOnline.Core.IChangeManagerStore)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangeManagerStore.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.ChangesLogsGet">
            <summary>Задает оболочка совместимости ChangeManagerStore.get_ChangesLogs()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.ConstructorLecOnlineDbEntities">
            <summary>Задает оболочка совместимости ChangeManagerStore.ChangeManagerStore(LecOnlineDbEntities context)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.Dispose">
            <summary>Задает оболочка совместимости ChangeManagerStore.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.DisposeBoolean">
            <summary>Задает оболочка совместимости ChangeManagerStore.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.RegisterAsyncChangesLog">
            <summary>Задает оболочка совместимости ChangeManagerStore.RegisterAsync(ChangesLog logEntry)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.ThrowIfDisposed">
            <summary>Задает оболочка совместимости ChangeManagerStore.ThrowIfDisposed()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimChangeManagerStore.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.AllInstances.ChangesLogsGet">
            <summary>Задает оболочка совместимости ChangeManagerStore.get_ChangesLogs()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.AllInstances.Dispose">
            <summary>Задает оболочка совместимости ChangeManagerStore.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости ChangeManagerStore.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.AllInstances.RegisterAsyncChangesLog">
            <summary>Задает оболочка совместимости ChangeManagerStore.RegisterAsync(ChangesLog logEntry)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangeManagerStore.AllInstances.ThrowIfDisposed">
            <summary>Задает оболочка совместимости ChangeManagerStore.ThrowIfDisposed()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimChangesLog">
            <summary>Тип оболочки совместимости для LecOnline.Core.ChangesLog</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangesLog.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangesLog.#ctor(LecOnline.Core.ChangesLog)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangesLog.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimChangesLog.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ChangeDescriptionGet">
            <summary>Задает оболочка совместимости ChangesLog.get_ChangeDescription()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ChangeDescriptionSetString">
            <summary>Задает оболочка совместимости ChangesLog.set_ChangeDescription(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ChangedByGet">
            <summary>Задает оболочка совместимости ChangesLog.get_ChangedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ChangedBySetString">
            <summary>Задает оболочка совместимости ChangesLog.set_ChangedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ChangedGet">
            <summary>Задает оболочка совместимости ChangesLog.get_Changed()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ChangedSetDateTime">
            <summary>Задает оболочка совместимости ChangesLog.set_Changed(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ClientIdGet">
            <summary>Задает оболочка совместимости ChangesLog.get_ClientId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ClientIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости ChangesLog.set_ClientId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.CommitteeIdGet">
            <summary>Задает оболочка совместимости ChangesLog.get_CommitteeId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.CommitteeIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости ChangesLog.set_CommitteeId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.Constructor">
            <summary>Задает оболочка совместимости ChangesLog.ChangesLog()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.IdGet">
            <summary>Задает оболочка совместимости ChangesLog.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.IdSetInt32">
            <summary>Задает оболочка совместимости ChangesLog.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ObjectIdGet">
            <summary>Задает оболочка совместимости ChangesLog.get_ObjectId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ObjectIdSetInt32">
            <summary>Задает оболочка совместимости ChangesLog.set_ObjectId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ObjectTypeGet">
            <summary>Задает оболочка совместимости ChangesLog.get_ObjectType()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.ObjectTypeSetInt32">
            <summary>Задает оболочка совместимости ChangesLog.set_ObjectType(Int32 value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimChangesLog.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ChangeDescriptionGet">
            <summary>Задает оболочка совместимости ChangesLog.get_ChangeDescription()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ChangeDescriptionSetString">
            <summary>Задает оболочка совместимости ChangesLog.set_ChangeDescription(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ChangedByGet">
            <summary>Задает оболочка совместимости ChangesLog.get_ChangedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ChangedBySetString">
            <summary>Задает оболочка совместимости ChangesLog.set_ChangedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ChangedGet">
            <summary>Задает оболочка совместимости ChangesLog.get_Changed()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ChangedSetDateTime">
            <summary>Задает оболочка совместимости ChangesLog.set_Changed(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ClientIdGet">
            <summary>Задает оболочка совместимости ChangesLog.get_ClientId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ClientIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости ChangesLog.set_ClientId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.CommitteeIdGet">
            <summary>Задает оболочка совместимости ChangesLog.get_CommitteeId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.CommitteeIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости ChangesLog.set_CommitteeId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.IdGet">
            <summary>Задает оболочка совместимости ChangesLog.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости ChangesLog.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ObjectIdGet">
            <summary>Задает оболочка совместимости ChangesLog.get_ObjectId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ObjectIdSetInt32">
            <summary>Задает оболочка совместимости ChangesLog.set_ObjectId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ObjectTypeGet">
            <summary>Задает оболочка совместимости ChangesLog.get_ObjectType()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimChangesLog.AllInstances.ObjectTypeSetInt32">
            <summary>Задает оболочка совместимости ChangesLog.set_ObjectType(Int32 value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimClient">
            <summary>Тип оболочки совместимости для LecOnline.Core.Client</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimClient.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimClient.#ctor(LecOnline.Core.Client)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimClient.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimClient.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.CompanyNameGet">
            <summary>Задает оболочка совместимости Client.get_CompanyName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.CompanyNameSetString">
            <summary>Задает оболочка совместимости Client.set_CompanyName(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.Constructor">
            <summary>Задает оболочка совместимости Client.Client()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.ContactEmailGet">
            <summary>Задает оболочка совместимости Client.get_ContactEmail()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.ContactEmailSetString">
            <summary>Задает оболочка совместимости Client.set_ContactEmail(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.ContactPersonGet">
            <summary>Задает оболочка совместимости Client.get_ContactPerson()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.ContactPersonSetString">
            <summary>Задает оболочка совместимости Client.set_ContactPerson(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.ContactPhoneGet">
            <summary>Задает оболочка совместимости Client.get_ContactPhone()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.ContactPhoneSetString">
            <summary>Задает оболочка совместимости Client.set_ContactPhone(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.IdGet">
            <summary>Задает оболочка совместимости Client.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.IdSetInt32">
            <summary>Задает оболочка совместимости Client.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.NotesGet">
            <summary>Задает оболочка совместимости Client.get_Notes()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.NotesSetString">
            <summary>Задает оболочка совместимости Client.set_Notes(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.RequestsGet">
            <summary>Задает оболочка совместимости Client.get_Requests()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.RequestsSetICollectionOfRequest">
            <summary>Задает оболочка совместимости Client.set_Requests(ICollection`1&lt;Request&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimClient.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.CompanyNameGet">
            <summary>Задает оболочка совместимости Client.get_CompanyName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.CompanyNameSetString">
            <summary>Задает оболочка совместимости Client.set_CompanyName(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.ContactEmailGet">
            <summary>Задает оболочка совместимости Client.get_ContactEmail()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.ContactEmailSetString">
            <summary>Задает оболочка совместимости Client.set_ContactEmail(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.ContactPersonGet">
            <summary>Задает оболочка совместимости Client.get_ContactPerson()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.ContactPersonSetString">
            <summary>Задает оболочка совместимости Client.set_ContactPerson(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.ContactPhoneGet">
            <summary>Задает оболочка совместимости Client.get_ContactPhone()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.ContactPhoneSetString">
            <summary>Задает оболочка совместимости Client.set_ContactPhone(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.IdGet">
            <summary>Задает оболочка совместимости Client.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости Client.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.NotesGet">
            <summary>Задает оболочка совместимости Client.get_Notes()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.NotesSetString">
            <summary>Задает оболочка совместимости Client.set_Notes(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.RequestsGet">
            <summary>Задает оболочка совместимости Client.get_Requests()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimClient.AllInstances.RequestsSetICollectionOfRequest">
            <summary>Задает оболочка совместимости Client.set_Requests(ICollection`1&lt;Request&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimCommittee">
            <summary>Тип оболочки совместимости для LecOnline.Core.Committee</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimCommittee.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimCommittee.#ctor(LecOnline.Core.Committee)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimCommittee.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimCommittee.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.ChairmanGet">
            <summary>Задает оболочка совместимости Committee.get_Chairman()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.ChairmanSetString">
            <summary>Задает оболочка совместимости Committee.set_Chairman(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.CityGet">
            <summary>Задает оболочка совместимости Committee.get_City()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.CitySetString">
            <summary>Задает оболочка совместимости Committee.set_City(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.Constructor">
            <summary>Задает оболочка совместимости Committee.Committee()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.IdGet">
            <summary>Задает оболочка совместимости Committee.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.IdSetInt32">
            <summary>Задает оболочка совместимости Committee.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.NameGet">
            <summary>Задает оболочка совместимости Committee.get_Name()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.NameSetString">
            <summary>Задает оболочка совместимости Committee.set_Name(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.NotesGet">
            <summary>Задает оболочка совместимости Committee.get_Notes()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.NotesSetString">
            <summary>Задает оболочка совместимости Committee.set_Notes(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.RequestsGet">
            <summary>Задает оболочка совместимости Committee.get_Requests()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.RequestsSetICollectionOfRequest">
            <summary>Задает оболочка совместимости Committee.set_Requests(ICollection`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.SecretaryGet">
            <summary>Задает оболочка совместимости Committee.get_Secretary()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.SecretarySetString">
            <summary>Задает оболочка совместимости Committee.set_Secretary(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.ViceChairmanGet">
            <summary>Задает оболочка совместимости Committee.get_ViceChairman()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.ViceChairmanSetString">
            <summary>Задает оболочка совместимости Committee.set_ViceChairman(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimCommittee.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.ChairmanGet">
            <summary>Задает оболочка совместимости Committee.get_Chairman()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.ChairmanSetString">
            <summary>Задает оболочка совместимости Committee.set_Chairman(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.CityGet">
            <summary>Задает оболочка совместимости Committee.get_City()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.CitySetString">
            <summary>Задает оболочка совместимости Committee.set_City(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.IdGet">
            <summary>Задает оболочка совместимости Committee.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости Committee.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.NameGet">
            <summary>Задает оболочка совместимости Committee.get_Name()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.NameSetString">
            <summary>Задает оболочка совместимости Committee.set_Name(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.NotesGet">
            <summary>Задает оболочка совместимости Committee.get_Notes()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.NotesSetString">
            <summary>Задает оболочка совместимости Committee.set_Notes(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.RequestsGet">
            <summary>Задает оболочка совместимости Committee.get_Requests()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.RequestsSetICollectionOfRequest">
            <summary>Задает оболочка совместимости Committee.set_Requests(ICollection`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.SecretaryGet">
            <summary>Задает оболочка совместимости Committee.get_Secretary()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.SecretarySetString">
            <summary>Задает оболочка совместимости Committee.set_Secretary(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.ViceChairmanGet">
            <summary>Задает оболочка совместимости Committee.get_ViceChairman()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimCommittee.AllInstances.ViceChairmanSetString">
            <summary>Задает оболочка совместимости Committee.set_ViceChairman(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimConfiguration">
            <summary>Тип оболочки совместимости для LecOnline.Core.Configuration</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimConfiguration.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimConfiguration.#ctor(LecOnline.Core.Configuration)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimConfiguration.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimConfiguration.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.Constructor">
            <summary>Задает оболочка совместимости Configuration.Configuration()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.IdGet">
            <summary>Задает оболочка совместимости Configuration.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.IdSetInt32">
            <summary>Задает оболочка совместимости Configuration.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.NameGet">
            <summary>Задает оболочка совместимости Configuration.get_Name()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.NameSetString">
            <summary>Задает оболочка совместимости Configuration.set_Name(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.ValueGet">
            <summary>Задает оболочка совместимости Configuration.get_Value()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.ValueSetString">
            <summary>Задает оболочка совместимости Configuration.set_Value(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimConfiguration.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.AllInstances.IdGet">
            <summary>Задает оболочка совместимости Configuration.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости Configuration.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.AllInstances.NameGet">
            <summary>Задает оболочка совместимости Configuration.get_Name()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.AllInstances.NameSetString">
            <summary>Задает оболочка совместимости Configuration.set_Name(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.AllInstances.ValueGet">
            <summary>Задает оболочка совместимости Configuration.get_Value()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimConfiguration.AllInstances.ValueSetString">
            <summary>Задает оболочка совместимости Configuration.set_Value(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimErrorLog">
            <summary>Тип оболочки совместимости для LecOnline.Core.ErrorLog</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimErrorLog.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimErrorLog.#ctor(LecOnline.Core.ErrorLog)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimErrorLog.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimErrorLog.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.Constructor">
            <summary>Задает оболочка совместимости ErrorLog.ErrorLog()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.CreatedGet">
            <summary>Задает оболочка совместимости ErrorLog.get_Created()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.CreatedSetDateTime">
            <summary>Задает оболочка совместимости ErrorLog.set_Created(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.ErrorMessageGet">
            <summary>Задает оболочка совместимости ErrorLog.get_ErrorMessage()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.ErrorMessageSetString">
            <summary>Задает оболочка совместимости ErrorLog.set_ErrorMessage(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.IdGet">
            <summary>Задает оболочка совместимости ErrorLog.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.IdSetInt32">
            <summary>Задает оболочка совместимости ErrorLog.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.UserNameGet">
            <summary>Задает оболочка совместимости ErrorLog.get_UserName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.UserNameSetString">
            <summary>Задает оболочка совместимости ErrorLog.set_UserName(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimErrorLog.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.AllInstances.CreatedGet">
            <summary>Задает оболочка совместимости ErrorLog.get_Created()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.AllInstances.CreatedSetDateTime">
            <summary>Задает оболочка совместимости ErrorLog.set_Created(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.AllInstances.ErrorMessageGet">
            <summary>Задает оболочка совместимости ErrorLog.get_ErrorMessage()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.AllInstances.ErrorMessageSetString">
            <summary>Задает оболочка совместимости ErrorLog.set_ErrorMessage(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.AllInstances.IdGet">
            <summary>Задает оболочка совместимости ErrorLog.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости ErrorLog.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.AllInstances.UserNameGet">
            <summary>Задает оболочка совместимости ErrorLog.get_UserName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimErrorLog.AllInstances.UserNameSetString">
            <summary>Задает оболочка совместимости ErrorLog.set_UserName(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimExceptionHelper">
            <summary>Тип оболочки совместимости для LecOnline.Core.ExceptionHelper</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimExceptionHelper.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimExceptionHelper.#ctor(LecOnline.Core.ExceptionHelper)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimExceptionHelper.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimExceptionHelper.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimExceptionHelper.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimExceptionHelper.Constructor">
            <summary>Задает оболочка совместимости ExceptionHelper.ExceptionHelper()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimExceptionHelper.FormatExceptionDbEntityValidationException">
            <summary>Задает оболочка совместимости ExceptionHelper.FormatException(DbEntityValidationException ex)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimExceptionHelper.FormatExceptionException">
            <summary>Задает оболочка совместимости ExceptionHelper.FormatException(Exception ex)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimExceptionHelper.PublishExceptionAsyncStringExceptionCancellationToken">
            <summary>Задает оболочка совместимости ExceptionHelper.PublishExceptionAsync(String userName, Exception ex, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimExceptionHelper.PublishExceptionStringException">
            <summary>Задает оболочка совместимости ExceptionHelper.PublishException(String userName, Exception ex)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimExceptionHelper.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1">
            <summary>Тип оболочки совместимости для LecOnline.Core.GenericDetailActionProvider`1</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.#ctor(LecOnline.Core.GenericDetailActionProvider{`0})">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.Bind(LecOnline.Core.IActionProvider)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.ConstructorStringStringArray">
            <summary>Задает оболочка совместимости GenericDetailActionProvider`1.GenericDetailActionProvider`1(String actionName, String[] roles)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.GetActionsClaimsPrincipalObject">
            <summary>Задает оболочка совместимости GenericDetailActionProvider`1.GetActions(ClaimsPrincipal principal, Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.IsTypeSuportedType">
            <summary>Задает оболочка совместимости GenericDetailActionProvider`1.IsTypeSuported(Type entityType)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.AllInstances.GetActionsClaimsPrincipalObject">
            <summary>Задает оболочка совместимости GenericDetailActionProvider`1.GetActions(ClaimsPrincipal principal, Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericDetailActionProvider`1.AllInstances.IsTypeSuportedType">
            <summary>Задает оболочка совместимости GenericDetailActionProvider`1.IsTypeSuported(Type entityType)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1">
            <summary>Тип оболочки совместимости для LecOnline.Core.GenericEditActionProvider`1</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.#ctor(LecOnline.Core.GenericEditActionProvider{`0})">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.Bind(LecOnline.Core.IActionProvider)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.ConstructorStringArray">
            <summary>Задает оболочка совместимости GenericEditActionProvider`1.GenericEditActionProvider`1(String[] roles)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.GetActionsClaimsPrincipalObject">
            <summary>Задает оболочка совместимости GenericEditActionProvider`1.GetActions(ClaimsPrincipal principal, Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.IsTypeSuportedType">
            <summary>Задает оболочка совместимости GenericEditActionProvider`1.IsTypeSuported(Type entityType)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.AllInstances.GetActionsClaimsPrincipalObject">
            <summary>Задает оболочка совместимости GenericEditActionProvider`1.GetActions(ClaimsPrincipal principal, Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimGenericEditActionProvider`1.AllInstances.IsTypeSuportedType">
            <summary>Задает оболочка совместимости GenericEditActionProvider`1.IsTypeSuported(Type entityType)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection">
            <summary>Тип оболочки совместимости для LecOnline.Core.LecOnlineConfigurationSection</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.#ctor(LecOnline.Core.LecOnlineConfigurationSection)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.Constructor">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.LecOnlineConfigurationSection()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.EmailGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_Email()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.EmailSetString">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.set_Email(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.InstanceGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_Instance()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.IsReadOnly">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.IsReadOnly()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.NoReplyAddressGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_NoReplyAddress()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.NoReplyAddressSetString">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.set_NoReplyAddress(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.PhoneGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_Phone()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.PhoneSetString">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.set_Phone(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.SendNotificationEmailsGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_SendNotificationEmails()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.SendNotificationEmailsSetBoolean">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.set_SendNotificationEmails(Boolean value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.SkypeGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_Skype()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.SkypeSetString">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.set_Skype(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.XmlnsGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_Xmlns()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.EmailGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_Email()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.EmailSetString">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.set_Email(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.IsReadOnly">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.IsReadOnly()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.NoReplyAddressGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_NoReplyAddress()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.NoReplyAddressSetString">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.set_NoReplyAddress(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.PhoneGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_Phone()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.PhoneSetString">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.set_Phone(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.SendNotificationEmailsGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_SendNotificationEmails()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.SendNotificationEmailsSetBoolean">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.set_SendNotificationEmails(Boolean value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.SkypeGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_Skype()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.SkypeSetString">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.set_Skype(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineConfigurationSection.AllInstances.XmlnsGet">
            <summary>Задает оболочка совместимости LecOnlineConfigurationSection.get_Xmlns()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimLecOnlineDbEntities">
            <summary>Тип оболочки совместимости для LecOnline.Core.LecOnlineDbEntities</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.#ctor(LecOnline.Core.LecOnlineDbEntities)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.ChangesLogsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_ChangesLogs()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.ChangesLogsSetDbSetOfChangesLog">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_ChangesLogs(DbSet`1&lt;ChangesLog&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.ClientsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_Clients()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.ClientsSetDbSetOfClient">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_Clients(DbSet`1&lt;Client&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.CommitteesGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_Committees()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.CommitteesSetDbSetOfCommittee">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_Committees(DbSet`1&lt;Committee&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.ConfigurationsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_Configurations()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.ConfigurationsSetDbSetOfConfiguration">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_Configurations(DbSet`1&lt;Configuration&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.Constructor">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.LecOnlineDbEntities()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.ErrorLogsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_ErrorLogs()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.ErrorLogsSetDbSetOfErrorLog">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_ErrorLogs(DbSet`1&lt;ErrorLog&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.MeetingAttendeesGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_MeetingAttendees()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.MeetingAttendeesSetDbSetOfMeetingAttendee">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_MeetingAttendees(DbSet`1&lt;MeetingAttendee&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.MeetingChatMessagesGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_MeetingChatMessages()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.MeetingChatMessagesSetDbSetOfMeetingChatMessage">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_MeetingChatMessages(DbSet`1&lt;MeetingChatMessage&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.MeetingsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_Meetings()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.MeetingsSetDbSetOfMeeting">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_Meetings(DbSet`1&lt;Meeting&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.OnModelCreatingDbModelBuilder">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.RequestActionsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_RequestActions()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.RequestActionsSetDbSetOfRequestAction">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_RequestActions(DbSet`1&lt;RequestAction&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.RequestDocumentationsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_RequestDocumentations()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.RequestDocumentationsSetDbSetOfRequestDocumentation">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_RequestDocumentations(DbSet`1&lt;RequestDocumentation&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.RequestsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_Requests()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.RequestsSetDbSetOfRequest">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_Requests(DbSet`1&lt;Request&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.ChangesLogsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_ChangesLogs()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.ChangesLogsSetDbSetOfChangesLog">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_ChangesLogs(DbSet`1&lt;ChangesLog&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.ClientsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_Clients()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.ClientsSetDbSetOfClient">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_Clients(DbSet`1&lt;Client&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.CommitteesGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_Committees()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.CommitteesSetDbSetOfCommittee">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_Committees(DbSet`1&lt;Committee&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.ConfigurationsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_Configurations()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.ConfigurationsSetDbSetOfConfiguration">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_Configurations(DbSet`1&lt;Configuration&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.ErrorLogsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_ErrorLogs()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.ErrorLogsSetDbSetOfErrorLog">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_ErrorLogs(DbSet`1&lt;ErrorLog&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.MeetingAttendeesGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_MeetingAttendees()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.MeetingAttendeesSetDbSetOfMeetingAttendee">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_MeetingAttendees(DbSet`1&lt;MeetingAttendee&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.MeetingChatMessagesGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_MeetingChatMessages()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.MeetingChatMessagesSetDbSetOfMeetingChatMessage">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_MeetingChatMessages(DbSet`1&lt;MeetingChatMessage&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.MeetingsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_Meetings()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.MeetingsSetDbSetOfMeeting">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_Meetings(DbSet`1&lt;Meeting&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.RequestActionsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_RequestActions()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.RequestActionsSetDbSetOfRequestAction">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_RequestActions(DbSet`1&lt;RequestAction&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.RequestDocumentationsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_RequestDocumentations()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.RequestDocumentationsSetDbSetOfRequestDocumentation">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_RequestDocumentations(DbSet`1&lt;RequestDocumentation&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.RequestsGet">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.get_Requests()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimLecOnlineDbEntities.AllInstances.RequestsSetDbSetOfRequest">
            <summary>Задает оболочка совместимости LecOnlineDbEntities.set_Requests(DbSet`1&lt;Request&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimMeeting">
            <summary>Тип оболочки совместимости для LecOnline.Core.Meeting</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeeting.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeeting.#ctor(LecOnline.Core.Meeting)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeeting.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeeting.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.Constructor">
            <summary>Задает оболочка совместимости Meeting.Meeting()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.IdGet">
            <summary>Задает оболочка совместимости Meeting.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.IdSetInt32">
            <summary>Задает оболочка совместимости Meeting.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.MeetingAttendeesGet">
            <summary>Задает оболочка совместимости Meeting.get_MeetingAttendees()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.MeetingAttendeesSetICollectionOfMeetingAttendee">
            <summary>Задает оболочка совместимости Meeting.set_MeetingAttendees(ICollection`1&lt;MeetingAttendee&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.MeetingChatMessagesGet">
            <summary>Задает оболочка совместимости Meeting.get_MeetingChatMessages()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.MeetingChatMessagesSetICollectionOfMeetingChatMessage">
            <summary>Задает оболочка совместимости Meeting.set_MeetingChatMessages(ICollection`1&lt;MeetingChatMessage&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.MeetingDateGet">
            <summary>Задает оболочка совместимости Meeting.get_MeetingDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.MeetingDateSetDateTime">
            <summary>Задает оболочка совместимости Meeting.set_MeetingDate(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.MeetingLogGet">
            <summary>Задает оболочка совместимости Meeting.get_MeetingLog()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.MeetingLogSetString">
            <summary>Задает оболочка совместимости Meeting.set_MeetingLog(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.ProtocolGet">
            <summary>Задает оболочка совместимости Meeting.get_Protocol()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.ProtocolSetString">
            <summary>Задает оболочка совместимости Meeting.set_Protocol(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.RequestGet">
            <summary>Задает оболочка совместимости Meeting.get_Request()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.RequestIdGet">
            <summary>Задает оболочка совместимости Meeting.get_RequestId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.RequestIdSetInt32">
            <summary>Задает оболочка совместимости Meeting.set_RequestId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.RequestSetRequest">
            <summary>Задает оболочка совместимости Meeting.set_Request(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.ResolutionGet">
            <summary>Задает оболочка совместимости Meeting.get_Resolution()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.ResolutionSetInt32">
            <summary>Задает оболочка совместимости Meeting.set_Resolution(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.StatusGet">
            <summary>Задает оболочка совместимости Meeting.get_Status()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.StatusSetInt32">
            <summary>Задает оболочка совместимости Meeting.set_Status(Int32 value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimMeeting.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.IdGet">
            <summary>Задает оболочка совместимости Meeting.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости Meeting.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.MeetingAttendeesGet">
            <summary>Задает оболочка совместимости Meeting.get_MeetingAttendees()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.MeetingAttendeesSetICollectionOfMeetingAttendee">
            <summary>Задает оболочка совместимости Meeting.set_MeetingAttendees(ICollection`1&lt;MeetingAttendee&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.MeetingChatMessagesGet">
            <summary>Задает оболочка совместимости Meeting.get_MeetingChatMessages()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.MeetingChatMessagesSetICollectionOfMeetingChatMessage">
            <summary>Задает оболочка совместимости Meeting.set_MeetingChatMessages(ICollection`1&lt;MeetingChatMessage&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.MeetingDateGet">
            <summary>Задает оболочка совместимости Meeting.get_MeetingDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.MeetingDateSetDateTime">
            <summary>Задает оболочка совместимости Meeting.set_MeetingDate(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.MeetingLogGet">
            <summary>Задает оболочка совместимости Meeting.get_MeetingLog()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.MeetingLogSetString">
            <summary>Задает оболочка совместимости Meeting.set_MeetingLog(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.ProtocolGet">
            <summary>Задает оболочка совместимости Meeting.get_Protocol()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.ProtocolSetString">
            <summary>Задает оболочка совместимости Meeting.set_Protocol(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.RequestGet">
            <summary>Задает оболочка совместимости Meeting.get_Request()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.RequestIdGet">
            <summary>Задает оболочка совместимости Meeting.get_RequestId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.RequestIdSetInt32">
            <summary>Задает оболочка совместимости Meeting.set_RequestId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.RequestSetRequest">
            <summary>Задает оболочка совместимости Meeting.set_Request(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.ResolutionGet">
            <summary>Задает оболочка совместимости Meeting.get_Resolution()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.ResolutionSetInt32">
            <summary>Задает оболочка совместимости Meeting.set_Resolution(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.StatusGet">
            <summary>Задает оболочка совместимости Meeting.get_Status()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeeting.AllInstances.StatusSetInt32">
            <summary>Задает оболочка совместимости Meeting.set_Status(Int32 value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimMeetingAttendee">
            <summary>Тип оболочки совместимости для LecOnline.Core.MeetingAttendee</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeetingAttendee.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeetingAttendee.#ctor(LecOnline.Core.MeetingAttendee)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeetingAttendee.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeetingAttendee.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.Constructor">
            <summary>Задает оболочка совместимости MeetingAttendee.MeetingAttendee()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.IdGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.IdSetInt32">
            <summary>Задает оболочка совместимости MeetingAttendee.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.MeetingGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_Meeting()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.MeetingIdGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_MeetingId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.MeetingIdSetInt32">
            <summary>Задает оболочка совместимости MeetingAttendee.set_MeetingId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.MeetingSetMeeting">
            <summary>Задает оболочка совместимости MeetingAttendee.set_Meeting(Meeting value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.StatusGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_Status()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.StatusSetNullableOfByte">
            <summary>Задает оболочка совместимости MeetingAttendee.set_Status(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.UserIdGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_UserId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.UserIdSetString">
            <summary>Задает оболочка совместимости MeetingAttendee.set_UserId(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.VoteGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_Vote()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.VoteSetNullableOfByte">
            <summary>Задает оболочка совместимости MeetingAttendee.set_Vote(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.IdGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости MeetingAttendee.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.MeetingGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_Meeting()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.MeetingIdGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_MeetingId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.MeetingIdSetInt32">
            <summary>Задает оболочка совместимости MeetingAttendee.set_MeetingId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.MeetingSetMeeting">
            <summary>Задает оболочка совместимости MeetingAttendee.set_Meeting(Meeting value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.StatusGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_Status()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.StatusSetNullableOfByte">
            <summary>Задает оболочка совместимости MeetingAttendee.set_Status(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.UserIdGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_UserId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.UserIdSetString">
            <summary>Задает оболочка совместимости MeetingAttendee.set_UserId(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.VoteGet">
            <summary>Задает оболочка совместимости MeetingAttendee.get_Vote()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingAttendee.AllInstances.VoteSetNullableOfByte">
            <summary>Задает оболочка совместимости MeetingAttendee.set_Vote(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimMeetingChatMessage">
            <summary>Тип оболочки совместимости для LecOnline.Core.MeetingChatMessage</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeetingChatMessage.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeetingChatMessage.#ctor(LecOnline.Core.MeetingChatMessage)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeetingChatMessage.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimMeetingChatMessage.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.Constructor">
            <summary>Задает оболочка совместимости MeetingChatMessage.MeetingChatMessage()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.IdGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.IdSetInt32">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.MeetingGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_Meeting()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.MeetingIdGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_MeetingId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.MeetingIdSetInt32">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_MeetingId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.MeetingSetMeeting">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_Meeting(Meeting value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.MessageGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_Message()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.MessageSetString">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_Message(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.SentDateGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_SentDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.SentDateSetDateTime">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_SentDate(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.UserIdGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_UserId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.UserIdSetString">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_UserId(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.IdGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.MeetingGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_Meeting()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.MeetingIdGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_MeetingId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.MeetingIdSetInt32">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_MeetingId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.MeetingSetMeeting">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_Meeting(Meeting value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.MessageGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_Message()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.MessageSetString">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_Message(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.SentDateGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_SentDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.SentDateSetDateTime">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_SentDate(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.UserIdGet">
            <summary>Задает оболочка совместимости MeetingChatMessage.get_UserId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimMeetingChatMessage.AllInstances.UserIdSetString">
            <summary>Задает оболочка совместимости MeetingChatMessage.set_UserId(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequest">
            <summary>Тип оболочки совместимости для LecOnline.Core.Request</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequest.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequest.#ctor(LecOnline.Core.Request)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequest.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequest.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AcceptedByGet">
            <summary>Задает оболочка совместимости Request.get_AcceptedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AcceptedBySetString">
            <summary>Задает оболочка совместимости Request.set_AcceptedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AcceptedGet">
            <summary>Задает оболочка совместимости Request.get_Accepted()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AcceptedSetNullableOfDateTime">
            <summary>Задает оболочка совместимости Request.set_Accepted(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.BaseRequestGet">
            <summary>Задает оболочка совместимости Request.get_BaseRequest()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.BaseRequestIdGet">
            <summary>Задает оболочка совместимости Request.get_BaseRequestId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.BaseRequestIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости Request.set_BaseRequestId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.BaseRequestSetRequest">
            <summary>Задает оболочка совместимости Request.set_BaseRequest(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.CentersQtyGet">
            <summary>Задает оболочка совместимости Request.get_CentersQty()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.CentersQtySetInt32">
            <summary>Задает оболочка совместимости Request.set_CentersQty(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ClientGet">
            <summary>Задает оболочка совместимости Request.get_Client()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ClientIdGet">
            <summary>Задает оболочка совместимости Request.get_ClientId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ClientIdSetInt32">
            <summary>Задает оболочка совместимости Request.set_ClientId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ClientSetClient">
            <summary>Задает оболочка совместимости Request.set_Client(Client value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.CommitteeGet">
            <summary>Задает оболочка совместимости Request.get_Committee()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.CommitteeIdGet">
            <summary>Задает оболочка совместимости Request.get_CommitteeId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.CommitteeIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости Request.set_CommitteeId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.CommitteeSetCommittee">
            <summary>Задает оболочка совместимости Request.set_Committee(Committee value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.Constructor">
            <summary>Задает оболочка совместимости Request.Request()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ContactEmailGet">
            <summary>Задает оболочка совместимости Request.get_ContactEmail()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ContactEmailSetString">
            <summary>Задает оболочка совместимости Request.set_ContactEmail(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ContactFaxGet">
            <summary>Задает оболочка совместимости Request.get_ContactFax()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ContactFaxSetString">
            <summary>Задает оболочка совместимости Request.set_ContactFax(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ContactPersonGet">
            <summary>Задает оболочка совместимости Request.get_ContactPerson()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ContactPersonSetString">
            <summary>Задает оболочка совместимости Request.set_ContactPerson(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ContactPhoneGet">
            <summary>Задает оболочка совместимости Request.get_ContactPhone()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.ContactPhoneSetString">
            <summary>Задает оболочка совместимости Request.set_ContactPhone(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.CreatedByGet">
            <summary>Задает оболочка совместимости Request.get_CreatedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.CreatedBySetString">
            <summary>Задает оболочка совместимости Request.set_CreatedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.CreatedGet">
            <summary>Задает оболочка совместимости Request.get_Created()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.CreatedSetDateTime">
            <summary>Задает оболочка совместимости Request.set_Created(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.DescriptionGet">
            <summary>Задает оболочка совместимости Request.get_Description()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.DescriptionSetString">
            <summary>Задает оболочка совместимости Request.set_Description(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.EarlierStudyGet">
            <summary>Задает оболочка совместимости Request.get_EarlierStudy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.EarlierStudySetString">
            <summary>Задает оболочка совместимости Request.set_EarlierStudy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.IdGet">
            <summary>Задает оболочка совместимости Request.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.IdSetInt32">
            <summary>Задает оболочка совместимости Request.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.InternationStudiesGet">
            <summary>Задает оболочка совместимости Request.get_InternationStudies()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.InternationStudiesSetString">
            <summary>Задает оболочка совместимости Request.set_InternationStudies(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.LastCommentsGet">
            <summary>Задает оболочка совместимости Request.get_LastComments()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.LastCommentsSetString">
            <summary>Задает оболочка совместимости Request.set_LastComments(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.LocalCentersQtyGet">
            <summary>Задает оболочка совместимости Request.get_LocalCentersQty()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.LocalCentersQtySetInt32">
            <summary>Задает оболочка совместимости Request.set_LocalCentersQty(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.MeetingsGet">
            <summary>Задает оболочка совместимости Request.get_Meetings()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.MeetingsSetICollectionOfMeeting">
            <summary>Задает оболочка совместимости Request.set_Meetings(ICollection`1&lt;Meeting&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.PatientsCountGet">
            <summary>Задает оболочка совместимости Request.get_PatientsCount()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.PatientsCountSetInt32">
            <summary>Задает оболочка совместимости Request.set_PatientsCount(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.PlannedDurationGet">
            <summary>Задает оболочка совместимости Request.get_PlannedDuration()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.PlannedDurationSetInt32">
            <summary>Задает оболочка совместимости Request.set_PlannedDuration(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.PopulationDescriptionGet">
            <summary>Задает оболочка совместимости Request.get_PopulationDescription()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.PopulationDescriptionSetString">
            <summary>Задает оболочка совместимости Request.set_PopulationDescription(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RandomizedPatientsCountGet">
            <summary>Задает оболочка совместимости Request.get_RandomizedPatientsCount()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RandomizedPatientsCountSetNullableOfInt32">
            <summary>Задает оболочка совместимости Request.set_RandomizedPatientsCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RejectionCommentsGet">
            <summary>Задает оболочка совместимости Request.get_RejectionComments()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RejectionCommentsSetString">
            <summary>Задает оболочка совместимости Request.set_RejectionComments(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RequestActionsGet">
            <summary>Задает оболочка совместимости Request.get_RequestActions()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RequestActionsSetICollectionOfRequestAction">
            <summary>Задает оболочка совместимости Request.set_RequestActions(ICollection`1&lt;RequestAction&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RequestDocumentationsGet">
            <summary>Задает оболочка совместимости Request.get_RequestDocumentations()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RequestDocumentationsSetICollectionOfRequestDocumentation">
            <summary>Задает оболочка совместимости Request.set_RequestDocumentations(ICollection`1&lt;RequestDocumentation&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RequestTypeGet">
            <summary>Задает оболочка совместимости Request.get_RequestType()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RequestTypeSetByte">
            <summary>Задает оболочка совместимости Request.set_RequestType(Byte value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RevokeCommentsGet">
            <summary>Задает оболочка совместимости Request.get_RevokeComments()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.RevokeCommentsSetString">
            <summary>Задает оболочка совместимости Request.set_RevokeComments(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.SentDateGet">
            <summary>Задает оболочка совместимости Request.get_SentDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.SentDateSetNullableOfDateTime">
            <summary>Задает оболочка совместимости Request.set_SentDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StatusGet">
            <summary>Задает оболочка совместимости Request.get_Status()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StatusSetInt32">
            <summary>Задает оболочка совместимости Request.set_Status(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyApprovedByGet">
            <summary>Задает оболочка совместимости Request.get_StudyApprovedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyApprovedBySetString">
            <summary>Задает оболочка совместимости Request.set_StudyApprovedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyBaseGet">
            <summary>Задает оболочка совместимости Request.get_StudyBase()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyBaseSetString">
            <summary>Задает оболочка совместимости Request.set_StudyBase(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyCodeGet">
            <summary>Задает оболочка совместимости Request.get_StudyCode()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyCodeSetString">
            <summary>Задает оболочка совместимости Request.set_StudyCode(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPerformerGet">
            <summary>Задает оболочка совместимости Request.get_StudyPerformer()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPerformerRegisteredAddressGet">
            <summary>Задает оболочка совместимости Request.get_StudyPerformerRegisteredAddress()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPerformerRegisteredAddressSetString">
            <summary>Задает оболочка совместимости Request.set_StudyPerformerRegisteredAddress(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPerformerSetString">
            <summary>Задает оболочка совместимости Request.set_StudyPerformer(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPerformerStatutoryAddressGet">
            <summary>Задает оболочка совместимости Request.get_StudyPerformerStatutoryAddress()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPerformerStatutoryAddressSetString">
            <summary>Задает оболочка совместимости Request.set_StudyPerformerStatutoryAddress(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPhaseGet">
            <summary>Задает оболочка совместимости Request.get_StudyPhase()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPhaseSetInt32">
            <summary>Задает оболочка совместимости Request.set_StudyPhase(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPlannedFinishDateGet">
            <summary>Задает оболочка совместимости Request.get_StudyPlannedFinishDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPlannedFinishDateSetNullableOfDateTime">
            <summary>Задает оболочка совместимости Request.set_StudyPlannedFinishDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPlannedStartDateGet">
            <summary>Задает оболочка совместимости Request.get_StudyPlannedStartDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyPlannedStartDateSetNullableOfDateTime">
            <summary>Задает оболочка совместимости Request.set_StudyPlannedStartDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyProducerGet">
            <summary>Задает оболочка совместимости Request.get_StudyProducer()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyProducerSetString">
            <summary>Задает оболочка совместимости Request.set_StudyProducer(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudySponsorGet">
            <summary>Задает оболочка совместимости Request.get_StudySponsor()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudySponsorSetString">
            <summary>Задает оболочка совместимости Request.set_StudySponsor(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyTypeGet">
            <summary>Задает оболочка совместимости Request.get_StudyType()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.StudyTypeSetNullableOfInt32">
            <summary>Задает оболочка совместимости Request.set_StudyType(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.SubmissionCommentsGet">
            <summary>Задает оболочка совместимости Request.get_SubmissionComments()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.SubmissionCommentsSetString">
            <summary>Задает оболочка совместимости Request.set_SubmissionComments(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.SubmittedByGet">
            <summary>Задает оболочка совместимости Request.get_SubmittedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.SubmittedBySetString">
            <summary>Задает оболочка совместимости Request.set_SubmittedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.SubsequentRequestsGet">
            <summary>Задает оболочка совместимости Request.get_SubsequentRequests()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.SubsequentRequestsSetICollectionOfRequest">
            <summary>Задает оболочка совместимости Request.set_SubsequentRequests(ICollection`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.TherapyDescriptionGet">
            <summary>Задает оболочка совместимости Request.get_TherapyDescription()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.TherapyDescriptionSetString">
            <summary>Задает оболочка совместимости Request.set_TherapyDescription(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.TitleGet">
            <summary>Задает оболочка совместимости Request.get_Title()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.TitleSetString">
            <summary>Задает оболочка совместимости Request.set_Title(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequest.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.AcceptedByGet">
            <summary>Задает оболочка совместимости Request.get_AcceptedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.AcceptedBySetString">
            <summary>Задает оболочка совместимости Request.set_AcceptedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.AcceptedGet">
            <summary>Задает оболочка совместимости Request.get_Accepted()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.AcceptedSetNullableOfDateTime">
            <summary>Задает оболочка совместимости Request.set_Accepted(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.BaseRequestGet">
            <summary>Задает оболочка совместимости Request.get_BaseRequest()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.BaseRequestIdGet">
            <summary>Задает оболочка совместимости Request.get_BaseRequestId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.BaseRequestIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости Request.set_BaseRequestId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.BaseRequestSetRequest">
            <summary>Задает оболочка совместимости Request.set_BaseRequest(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.CentersQtyGet">
            <summary>Задает оболочка совместимости Request.get_CentersQty()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.CentersQtySetInt32">
            <summary>Задает оболочка совместимости Request.set_CentersQty(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ClientGet">
            <summary>Задает оболочка совместимости Request.get_Client()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ClientIdGet">
            <summary>Задает оболочка совместимости Request.get_ClientId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ClientIdSetInt32">
            <summary>Задает оболочка совместимости Request.set_ClientId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ClientSetClient">
            <summary>Задает оболочка совместимости Request.set_Client(Client value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.CommitteeGet">
            <summary>Задает оболочка совместимости Request.get_Committee()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.CommitteeIdGet">
            <summary>Задает оболочка совместимости Request.get_CommitteeId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.CommitteeIdSetNullableOfInt32">
            <summary>Задает оболочка совместимости Request.set_CommitteeId(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.CommitteeSetCommittee">
            <summary>Задает оболочка совместимости Request.set_Committee(Committee value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ContactEmailGet">
            <summary>Задает оболочка совместимости Request.get_ContactEmail()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ContactEmailSetString">
            <summary>Задает оболочка совместимости Request.set_ContactEmail(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ContactFaxGet">
            <summary>Задает оболочка совместимости Request.get_ContactFax()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ContactFaxSetString">
            <summary>Задает оболочка совместимости Request.set_ContactFax(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ContactPersonGet">
            <summary>Задает оболочка совместимости Request.get_ContactPerson()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ContactPersonSetString">
            <summary>Задает оболочка совместимости Request.set_ContactPerson(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ContactPhoneGet">
            <summary>Задает оболочка совместимости Request.get_ContactPhone()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.ContactPhoneSetString">
            <summary>Задает оболочка совместимости Request.set_ContactPhone(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.CreatedByGet">
            <summary>Задает оболочка совместимости Request.get_CreatedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.CreatedBySetString">
            <summary>Задает оболочка совместимости Request.set_CreatedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.CreatedGet">
            <summary>Задает оболочка совместимости Request.get_Created()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.CreatedSetDateTime">
            <summary>Задает оболочка совместимости Request.set_Created(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.DescriptionGet">
            <summary>Задает оболочка совместимости Request.get_Description()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.DescriptionSetString">
            <summary>Задает оболочка совместимости Request.set_Description(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.EarlierStudyGet">
            <summary>Задает оболочка совместимости Request.get_EarlierStudy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.EarlierStudySetString">
            <summary>Задает оболочка совместимости Request.set_EarlierStudy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.IdGet">
            <summary>Задает оболочка совместимости Request.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости Request.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.InternationStudiesGet">
            <summary>Задает оболочка совместимости Request.get_InternationStudies()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.InternationStudiesSetString">
            <summary>Задает оболочка совместимости Request.set_InternationStudies(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.LastCommentsGet">
            <summary>Задает оболочка совместимости Request.get_LastComments()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.LastCommentsSetString">
            <summary>Задает оболочка совместимости Request.set_LastComments(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.LocalCentersQtyGet">
            <summary>Задает оболочка совместимости Request.get_LocalCentersQty()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.LocalCentersQtySetInt32">
            <summary>Задает оболочка совместимости Request.set_LocalCentersQty(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.MeetingsGet">
            <summary>Задает оболочка совместимости Request.get_Meetings()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.MeetingsSetICollectionOfMeeting">
            <summary>Задает оболочка совместимости Request.set_Meetings(ICollection`1&lt;Meeting&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.PatientsCountGet">
            <summary>Задает оболочка совместимости Request.get_PatientsCount()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.PatientsCountSetInt32">
            <summary>Задает оболочка совместимости Request.set_PatientsCount(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.PlannedDurationGet">
            <summary>Задает оболочка совместимости Request.get_PlannedDuration()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.PlannedDurationSetInt32">
            <summary>Задает оболочка совместимости Request.set_PlannedDuration(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.PopulationDescriptionGet">
            <summary>Задает оболочка совместимости Request.get_PopulationDescription()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.PopulationDescriptionSetString">
            <summary>Задает оболочка совместимости Request.set_PopulationDescription(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RandomizedPatientsCountGet">
            <summary>Задает оболочка совместимости Request.get_RandomizedPatientsCount()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RandomizedPatientsCountSetNullableOfInt32">
            <summary>Задает оболочка совместимости Request.set_RandomizedPatientsCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RejectionCommentsGet">
            <summary>Задает оболочка совместимости Request.get_RejectionComments()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RejectionCommentsSetString">
            <summary>Задает оболочка совместимости Request.set_RejectionComments(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RequestActionsGet">
            <summary>Задает оболочка совместимости Request.get_RequestActions()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RequestActionsSetICollectionOfRequestAction">
            <summary>Задает оболочка совместимости Request.set_RequestActions(ICollection`1&lt;RequestAction&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RequestDocumentationsGet">
            <summary>Задает оболочка совместимости Request.get_RequestDocumentations()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RequestDocumentationsSetICollectionOfRequestDocumentation">
            <summary>Задает оболочка совместимости Request.set_RequestDocumentations(ICollection`1&lt;RequestDocumentation&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RequestTypeGet">
            <summary>Задает оболочка совместимости Request.get_RequestType()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RequestTypeSetByte">
            <summary>Задает оболочка совместимости Request.set_RequestType(Byte value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RevokeCommentsGet">
            <summary>Задает оболочка совместимости Request.get_RevokeComments()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.RevokeCommentsSetString">
            <summary>Задает оболочка совместимости Request.set_RevokeComments(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.SentDateGet">
            <summary>Задает оболочка совместимости Request.get_SentDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.SentDateSetNullableOfDateTime">
            <summary>Задает оболочка совместимости Request.set_SentDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StatusGet">
            <summary>Задает оболочка совместимости Request.get_Status()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StatusSetInt32">
            <summary>Задает оболочка совместимости Request.set_Status(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyApprovedByGet">
            <summary>Задает оболочка совместимости Request.get_StudyApprovedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyApprovedBySetString">
            <summary>Задает оболочка совместимости Request.set_StudyApprovedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyBaseGet">
            <summary>Задает оболочка совместимости Request.get_StudyBase()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyBaseSetString">
            <summary>Задает оболочка совместимости Request.set_StudyBase(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyCodeGet">
            <summary>Задает оболочка совместимости Request.get_StudyCode()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyCodeSetString">
            <summary>Задает оболочка совместимости Request.set_StudyCode(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPerformerGet">
            <summary>Задает оболочка совместимости Request.get_StudyPerformer()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPerformerRegisteredAddressGet">
            <summary>Задает оболочка совместимости Request.get_StudyPerformerRegisteredAddress()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPerformerRegisteredAddressSetString">
            <summary>Задает оболочка совместимости Request.set_StudyPerformerRegisteredAddress(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPerformerSetString">
            <summary>Задает оболочка совместимости Request.set_StudyPerformer(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPerformerStatutoryAddressGet">
            <summary>Задает оболочка совместимости Request.get_StudyPerformerStatutoryAddress()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPerformerStatutoryAddressSetString">
            <summary>Задает оболочка совместимости Request.set_StudyPerformerStatutoryAddress(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPhaseGet">
            <summary>Задает оболочка совместимости Request.get_StudyPhase()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPhaseSetInt32">
            <summary>Задает оболочка совместимости Request.set_StudyPhase(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPlannedFinishDateGet">
            <summary>Задает оболочка совместимости Request.get_StudyPlannedFinishDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPlannedFinishDateSetNullableOfDateTime">
            <summary>Задает оболочка совместимости Request.set_StudyPlannedFinishDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPlannedStartDateGet">
            <summary>Задает оболочка совместимости Request.get_StudyPlannedStartDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyPlannedStartDateSetNullableOfDateTime">
            <summary>Задает оболочка совместимости Request.set_StudyPlannedStartDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyProducerGet">
            <summary>Задает оболочка совместимости Request.get_StudyProducer()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyProducerSetString">
            <summary>Задает оболочка совместимости Request.set_StudyProducer(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudySponsorGet">
            <summary>Задает оболочка совместимости Request.get_StudySponsor()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudySponsorSetString">
            <summary>Задает оболочка совместимости Request.set_StudySponsor(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyTypeGet">
            <summary>Задает оболочка совместимости Request.get_StudyType()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.StudyTypeSetNullableOfInt32">
            <summary>Задает оболочка совместимости Request.set_StudyType(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.SubmissionCommentsGet">
            <summary>Задает оболочка совместимости Request.get_SubmissionComments()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.SubmissionCommentsSetString">
            <summary>Задает оболочка совместимости Request.set_SubmissionComments(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.SubmittedByGet">
            <summary>Задает оболочка совместимости Request.get_SubmittedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.SubmittedBySetString">
            <summary>Задает оболочка совместимости Request.set_SubmittedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.SubsequentRequestsGet">
            <summary>Задает оболочка совместимости Request.get_SubsequentRequests()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.SubsequentRequestsSetICollectionOfRequest">
            <summary>Задает оболочка совместимости Request.set_SubsequentRequests(ICollection`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.TherapyDescriptionGet">
            <summary>Задает оболочка совместимости Request.get_TherapyDescription()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.TherapyDescriptionSetString">
            <summary>Задает оболочка совместимости Request.set_TherapyDescription(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.TitleGet">
            <summary>Задает оболочка совместимости Request.get_Title()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequest.AllInstances.TitleSetString">
            <summary>Задает оболочка совместимости Request.set_Title(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestAction">
            <summary>Тип оболочки совместимости для LecOnline.Core.RequestAction</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestAction.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestAction.#ctor(LecOnline.Core.RequestAction)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestAction.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestAction.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.ActionDateGet">
            <summary>Задает оболочка совместимости RequestAction.get_ActionDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.ActionDateSetDateTime">
            <summary>Задает оболочка совместимости RequestAction.set_ActionDate(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.ActionTypeGet">
            <summary>Задает оболочка совместимости RequestAction.get_ActionType()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.ActionTypeSetByte">
            <summary>Задает оболочка совместимости RequestAction.set_ActionType(Byte value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.Constructor">
            <summary>Задает оболочка совместимости RequestAction.RequestAction()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.DescriptionGet">
            <summary>Задает оболочка совместимости RequestAction.get_Description()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.DescriptionSetString">
            <summary>Задает оболочка совместимости RequestAction.set_Description(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.IdGet">
            <summary>Задает оболочка совместимости RequestAction.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.IdSetInt32">
            <summary>Задает оболочка совместимости RequestAction.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.RequestGet">
            <summary>Задает оболочка совместимости RequestAction.get_Request()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.RequestIdGet">
            <summary>Задает оболочка совместимости RequestAction.get_RequestId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.RequestIdSetInt32">
            <summary>Задает оболочка совместимости RequestAction.set_RequestId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.RequestSetRequest">
            <summary>Задает оболочка совместимости RequestAction.set_Request(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.UserNameGet">
            <summary>Задает оболочка совместимости RequestAction.get_UserName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.UserNameSetString">
            <summary>Задает оболочка совместимости RequestAction.set_UserName(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestAction.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.ActionDateGet">
            <summary>Задает оболочка совместимости RequestAction.get_ActionDate()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.ActionDateSetDateTime">
            <summary>Задает оболочка совместимости RequestAction.set_ActionDate(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.ActionTypeGet">
            <summary>Задает оболочка совместимости RequestAction.get_ActionType()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.ActionTypeSetByte">
            <summary>Задает оболочка совместимости RequestAction.set_ActionType(Byte value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.DescriptionGet">
            <summary>Задает оболочка совместимости RequestAction.get_Description()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.DescriptionSetString">
            <summary>Задает оболочка совместимости RequestAction.set_Description(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.IdGet">
            <summary>Задает оболочка совместимости RequestAction.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости RequestAction.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.RequestGet">
            <summary>Задает оболочка совместимости RequestAction.get_Request()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.RequestIdGet">
            <summary>Задает оболочка совместимости RequestAction.get_RequestId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.RequestIdSetInt32">
            <summary>Задает оболочка совместимости RequestAction.set_RequestId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.RequestSetRequest">
            <summary>Задает оболочка совместимости RequestAction.set_Request(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.UserNameGet">
            <summary>Задает оболочка совместимости RequestAction.get_UserName()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestAction.AllInstances.UserNameSetString">
            <summary>Задает оболочка совместимости RequestAction.set_UserName(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestActionProvider">
            <summary>Тип оболочки совместимости для LecOnline.Core.RequestActionProvider</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestActionProvider.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestActionProvider.#ctor(LecOnline.Core.RequestActionProvider)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestActionProvider.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestActionProvider.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestActionProvider.Bind(LecOnline.Core.IActionProvider)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestActionProvider.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestActionProvider.Constructor">
            <summary>Задает оболочка совместимости RequestActionProvider.RequestActionProvider()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestActionProvider.GetActionsClaimsPrincipalObject">
            <summary>Задает оболочка совместимости RequestActionProvider.GetActions(ClaimsPrincipal principal, Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestActionProvider.IsTypeSuportedType">
            <summary>Задает оболочка совместимости RequestActionProvider.IsTypeSuported(Type entityType)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestActionProvider._GetActionsb__14Meeting">
            <summary>Задает оболочка совместимости RequestActionProvider.&lt;GetActions&gt;b__14(Meeting _)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestActionProvider.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestActionProvider.AllInstances.GetActionsClaimsPrincipalObject">
            <summary>Задает оболочка совместимости RequestActionProvider.GetActions(ClaimsPrincipal principal, Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestActionProvider.AllInstances.IsTypeSuportedType">
            <summary>Задает оболочка совместимости RequestActionProvider.IsTypeSuported(Type entityType)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestDocumentation">
            <summary>Тип оболочки совместимости для LecOnline.Core.RequestDocumentation</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestDocumentation.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestDocumentation.#ctor(LecOnline.Core.RequestDocumentation)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestDocumentation.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestDocumentation.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.Constructor">
            <summary>Задает оболочка совместимости RequestDocumentation.RequestDocumentation()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.ContentGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Content()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.ContentSetByteArray">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Content(Byte[] value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.CreatedByGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_CreatedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.CreatedBySetString">
            <summary>Задает оболочка совместимости RequestDocumentation.set_CreatedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.CreatedGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Created()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.CreatedSetDateTime">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Created(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.FileTypeGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_FileType()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.FileTypeSetByte">
            <summary>Задает оболочка совместимости RequestDocumentation.set_FileType(Byte value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.IdGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.IdSetInt32">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.NameGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Name()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.NameSetString">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Name(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.RequestGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Request()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.RequestIdGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_RequestId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.RequestIdSetInt32">
            <summary>Задает оболочка совместимости RequestDocumentation.set_RequestId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.RequestSetRequest">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Request(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.SignedByGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_SignedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.SignedBySetString">
            <summary>Задает оболочка совместимости RequestDocumentation.set_SignedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.SignedGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Signed()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.SignedSetNullableOfDateTime">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Signed(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.ContentGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Content()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.ContentSetByteArray">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Content(Byte[] value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.CreatedByGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_CreatedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.CreatedBySetString">
            <summary>Задает оболочка совместимости RequestDocumentation.set_CreatedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.CreatedGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Created()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.CreatedSetDateTime">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Created(DateTime value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.FileTypeGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_FileType()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.FileTypeSetByte">
            <summary>Задает оболочка совместимости RequestDocumentation.set_FileType(Byte value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.IdGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.IdSetInt32">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Id(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.NameGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Name()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.NameSetString">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Name(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.RequestGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Request()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.RequestIdGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_RequestId()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.RequestIdSetInt32">
            <summary>Задает оболочка совместимости RequestDocumentation.set_RequestId(Int32 value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.RequestSetRequest">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Request(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.SignedByGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_SignedBy()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.SignedBySetString">
            <summary>Задает оболочка совместимости RequestDocumentation.set_SignedBy(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.SignedGet">
            <summary>Задает оболочка совместимости RequestDocumentation.get_Signed()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestDocumentation.AllInstances.SignedSetNullableOfDateTime">
            <summary>Задает оболочка совместимости RequestDocumentation.set_Signed(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestManager">
            <summary>Тип оболочки совместимости для LecOnline.Core.RequestManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestManager.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestManager.#ctor(LecOnline.Core.RequestManager)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestManager.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestManager.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestManager.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AcceptAsyncClaimsPrincipalInt32">
            <summary>Задает оболочка совместимости RequestManager.AcceptAsync(ClaimsPrincipal principal, Int32 requestId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AcceptMeetingAsyncClaimsPrincipalMeeting">
            <summary>Задает оболочка совместимости RequestManager.AcceptMeetingAsync(ClaimsPrincipal principal, Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.ConstructorIRequestStoreChangeManager">
            <summary>Задает оболочка совместимости RequestManager.RequestManager(IRequestStore store, ChangeManager changeManager)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldAcceptOrRejectMeetingMeetingClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldAcceptOrRejectMeeting(Meeting meeting, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldAcceptOrRejectRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldAcceptOrRejectRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldCreateNotificationRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldCreateNotificationRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldCreateRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldCreateRequest(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldCreateSecondaryRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldCreateSecondaryRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldDeleteRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldDeleteRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldEditRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldEditRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldEnterMeetingResolutionRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldEnterMeetingResolution(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldFinishMeetingRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldFinishMeetingRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldRevokeRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldRevokeRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldSendChatInMeetingRoomRequestMeetingClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldSendChatInMeetingRoom(Request request, Meeting meeting, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldSetMeetingRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldSetMeetingRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldStartMeetingRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldStartMeetingRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldStartVotingRequestMeetingClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldStartVoting(Request request, Meeting meeting, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldStopMeetingRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldStopMeetingRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldSubmitRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldSubmitRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldViewMeetingAttendancesRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldViewMeetingAttendances(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldViewMeetingRoomRequestMeetingClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldViewMeetingRoom(Request request, Meeting meeting, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldViewRequestRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldViewRequest(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldViewRequestsHistoryRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldViewRequestsHistory(Request request, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CouldVoteMeetingClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.CouldVote(Meeting meeting, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CreateNotificationRequestAsyncClaimsPrincipalRequestRequest">
            <summary>Задает оболочка совместимости RequestManager.CreateNotificationRequestAsync(ClaimsPrincipal principal, Request request, Request baseRequest)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CreatePrimaryRequestAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.CreatePrimaryRequestAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CreateRequestActionClaimsPrincipalRequestRequestActionTypeObjectArray">
            <summary>Задает оболочка совместимости RequestManager.CreateRequestAction(ClaimsPrincipal principal, Request request, RequestActionType type, Object[] parameters)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.CreateSecondaryRequestAsyncClaimsPrincipalRequestRequest">
            <summary>Задает оболочка совместимости RequestManager.CreateSecondaryRequestAsync(ClaimsPrincipal principal, Request request, Request baseRequest)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.DeclineMeetingAsyncClaimsPrincipalMeeting">
            <summary>Задает оболочка совместимости RequestManager.DeclineMeetingAsync(ClaimsPrincipal principal, Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.DeleteAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.DeleteAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.DeleteAsyncClaimsPrincipalRequestDocumentation">
            <summary>Задает оболочка совместимости RequestManager.DeleteAsync(ClaimsPrincipal principal, RequestDocumentation documentation)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.Dispose">
            <summary>Задает оболочка совместимости RequestManager.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.DisposeBoolean">
            <summary>Задает оболочка совместимости RequestManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.FilterRequestsIQueryableOfRequestClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.FilterRequests(IQueryable`1&lt;Request&gt; requests, ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.FinalizeMeetingAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.FinalizeMeetingAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.FindByIdAsyncClaimsPrincipalInt32">
            <summary>Задает оболочка совместимости RequestManager.FindByIdAsync(ClaimsPrincipal principal, Int32 requestId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.FindDocumentationByIdAsyncClaimsPrincipalInt32">
            <summary>Задает оболочка совместимости RequestManager.FindDocumentationByIdAsync(ClaimsPrincipal principal, Int32 id)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.FinishMeetingAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.FinishMeetingAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.GetMeetingChatMessagesInt32">
            <summary>Задает оболочка совместимости RequestManager.GetMeetingChatMessages(Int32 meetingId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.GetPendingRequestsClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.GetPendingRequests(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.GetRequestsClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.GetRequests(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.GetSubmissionArchiveClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.GetSubmissionArchive(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.IsDocumentationSufficientRequest">
            <summary>Задает оболочка совместимости RequestManager.IsDocumentationSufficient(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.MeetingSetupAddActionOfMeeting">
            <summary>Задает оболочка совместимости RequestManager.add_MeetingSetup(Action`1&lt;Meeting&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.MeetingSetupRemoveActionOfMeeting">
            <summary>Задает оболочка совместимости RequestManager.remove_MeetingSetup(Action`1&lt;Meeting&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RejectAsyncClaimsPrincipalInt32String">
            <summary>Задает оболочка совместимости RequestManager.RejectAsync(ClaimsPrincipal principal, Int32 requestId, String rejectionReason)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RequestAcceptedAddActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.add_RequestAccepted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RequestAcceptedRemoveActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.remove_RequestAccepted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RequestRejectedAddActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.add_RequestRejected(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RequestRejectedRemoveActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.remove_RequestRejected(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RequestResolutionMadeAddActionOfRequestBoolean">
            <summary>Задает оболочка совместимости RequestManager.add_RequestResolutionMade(Action`2&lt;Request,Boolean&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RequestResolutionMadeRemoveActionOfRequestBoolean">
            <summary>Задает оболочка совместимости RequestManager.remove_RequestResolutionMade(Action`2&lt;Request,Boolean&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RequestSubmittedAddActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.add_RequestSubmitted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RequestSubmittedRemoveActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.remove_RequestSubmitted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RequestSubmittingAddFuncOfRequestBoolean">
            <summary>Задает оболочка совместимости RequestManager.add_RequestSubmitting(Func`2&lt;Request,Boolean&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RequestSubmittingRemoveFuncOfRequestBoolean">
            <summary>Задает оболочка совместимости RequestManager.remove_RequestSubmitting(Func`2&lt;Request,Boolean&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.RevokeAsyncClaimsPrincipalInt32String">
            <summary>Задает оболочка совместимости RequestManager.RevokeAsync(ClaimsPrincipal principal, Int32 requestId, String comments)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.SendMessageAsyncClaimsPrincipalRequestString">
            <summary>Задает оболочка совместимости RequestManager.SendMessageAsync(ClaimsPrincipal principal, Request request, String message)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.SetupMeetingAsyncClaimsPrincipalRequestDateTimeIEnumerableOfString">
            <summary>Задает оболочка совместимости RequestManager.SetupMeetingAsync(ClaimsPrincipal principal, Request request, DateTime meetingDate, IEnumerable`1&lt;String&gt; members)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.StartMeetingAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.StartMeetingAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.StartMeetingIfPossibleRequest">
            <summary>Задает оболочка совместимости RequestManager.StartMeetingIfPossible(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.StartVotingAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.StartVotingAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.StopMeetingAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.StopMeetingAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.SubmitAsyncClaimsPrincipalInt32Int32String">
            <summary>Задает оболочка совместимости RequestManager.SubmitAsync(ClaimsPrincipal principal, Int32 requestId, Int32 committeeId, String comments)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.ThrowIfDisposed">
            <summary>Задает оболочка совместимости RequestManager.ThrowIfDisposed()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.UpdateAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.UpdateAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.UploadDocumentationAsyncClaimsPrincipalInt32DocumentationTypeStringStringStream">
            <summary>Задает оболочка совместимости RequestManager.UploadDocumentationAsync(ClaimsPrincipal principal, Int32 requestId, DocumentationType fileType, String filename, String contentType, Stream dataStream)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.VoteAbstainAsyncClaimsPrincipalMeeting">
            <summary>Задает оболочка совместимости RequestManager.VoteAbstainAsync(ClaimsPrincipal principal, Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.VoteAcceptAsyncClaimsPrincipalMeeting">
            <summary>Задает оболочка совместимости RequestManager.VoteAcceptAsync(ClaimsPrincipal principal, Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.VoteMadeAddActionOfRequestClaimsPrincipalVoteStatus">
            <summary>Задает оболочка совместимости RequestManager.add_VoteMade(Action`3&lt;Request,ClaimsPrincipal,VoteStatus&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.VoteMadeRemoveActionOfRequestClaimsPrincipalVoteStatus">
            <summary>Задает оболочка совместимости RequestManager.remove_VoteMade(Action`3&lt;Request,ClaimsPrincipal,VoteStatus&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.VoteRejectAsyncClaimsPrincipalMeeting">
            <summary>Задает оболочка совместимости RequestManager.VoteRejectAsync(ClaimsPrincipal principal, Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.VotingStartedAddActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.add_VotingStarted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.VotingStartedRemoveActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.remove_VotingStarted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._CouldEnterMeetingResolutionb__8Meeting">
            <summary>Задает оболочка совместимости RequestManager.&lt;CouldEnterMeetingResolution&gt;b__8(Meeting _)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._CouldFinishMeetingRequestb__aMeeting">
            <summary>Задает оболочка совместимости RequestManager.&lt;CouldFinishMeetingRequest&gt;b__a(Meeting _)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._CouldStopMeetingRequestb__6Meeting">
            <summary>Задает оболочка совместимости RequestManager.&lt;CouldStopMeetingRequest&gt;b__6(Meeting _)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._FinalizeMeetingAsyncb__86Meeting">
            <summary>Задает оболочка совместимости RequestManager.&lt;FinalizeMeetingAsync&gt;b__86(Meeting _)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._FinishMeetingAsyncb__8fMeeting">
            <summary>Задает оболочка совместимости RequestManager.&lt;FinishMeetingAsync&gt;b__8f(Meeting _)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._IsDocumentationSufficientb__33RequestDocumentation">
            <summary>Задает оболочка совместимости RequestManager.&lt;IsDocumentationSufficient&gt;b__33(RequestDocumentation doc)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._IsDocumentationSufficientb__34DocumentationType">
            <summary>Задает оболочка совместимости RequestManager.&lt;IsDocumentationSufficient&gt;b__34(DocumentationType type)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._IsDocumentationSufficientb__35RequestDocumentationDocumentationType">
            <summary>Задает оболочка совместимости RequestManager.&lt;IsDocumentationSufficient&gt;b__35(RequestDocumentation doc, DocumentationType type)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._SendMessageAsyncb__c4Meeting">
            <summary>Задает оболочка совместимости RequestManager.&lt;SendMessageAsync&gt;b__c4(Meeting _)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._StartMeetingAsyncb__76Meeting">
            <summary>Задает оболочка совместимости RequestManager.&lt;StartMeetingAsync&gt;b__76(Meeting _)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._StartMeetingIfPossibleb__69Meeting">
            <summary>Задает оболочка совместимости RequestManager.&lt;StartMeetingIfPossible&gt;b__69(Meeting _)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._StartVotingAsyncb__a5Meeting">
            <summary>Задает оболочка совместимости RequestManager.&lt;StartVotingAsync&gt;b__a5(Meeting _)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager._StopMeetingAsyncb__7eMeeting">
            <summary>Задает оболочка совместимости RequestManager.&lt;StopMeetingAsync&gt;b__7e(Meeting _)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestManager.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.AcceptAsyncClaimsPrincipalInt32">
            <summary>Задает оболочка совместимости RequestManager.AcceptAsync(ClaimsPrincipal principal, Int32 requestId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.AcceptMeetingAsyncClaimsPrincipalMeeting">
            <summary>Задает оболочка совместимости RequestManager.AcceptMeetingAsync(ClaimsPrincipal principal, Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.CreateNotificationRequestAsyncClaimsPrincipalRequestRequest">
            <summary>Задает оболочка совместимости RequestManager.CreateNotificationRequestAsync(ClaimsPrincipal principal, Request request, Request baseRequest)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.CreatePrimaryRequestAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.CreatePrimaryRequestAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.CreateSecondaryRequestAsyncClaimsPrincipalRequestRequest">
            <summary>Задает оболочка совместимости RequestManager.CreateSecondaryRequestAsync(ClaimsPrincipal principal, Request request, Request baseRequest)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.DeclineMeetingAsyncClaimsPrincipalMeeting">
            <summary>Задает оболочка совместимости RequestManager.DeclineMeetingAsync(ClaimsPrincipal principal, Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.DeleteAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.DeleteAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.DeleteAsyncClaimsPrincipalRequestDocumentation">
            <summary>Задает оболочка совместимости RequestManager.DeleteAsync(ClaimsPrincipal principal, RequestDocumentation documentation)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.Dispose">
            <summary>Задает оболочка совместимости RequestManager.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости RequestManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.FinalizeMeetingAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.FinalizeMeetingAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.FindByIdAsyncClaimsPrincipalInt32">
            <summary>Задает оболочка совместимости RequestManager.FindByIdAsync(ClaimsPrincipal principal, Int32 requestId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.FindDocumentationByIdAsyncClaimsPrincipalInt32">
            <summary>Задает оболочка совместимости RequestManager.FindDocumentationByIdAsync(ClaimsPrincipal principal, Int32 id)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.FinishMeetingAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.FinishMeetingAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.GetMeetingChatMessagesInt32">
            <summary>Задает оболочка совместимости RequestManager.GetMeetingChatMessages(Int32 meetingId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.GetPendingRequestsClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.GetPendingRequests(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.GetRequestsClaimsPrincipal">
            <summary>Задает оболочка совместимости RequestManager.GetRequests(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.GetSubmissionArchiveClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.GetSubmissionArchive(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.IsDocumentationSufficientRequest">
            <summary>Задает оболочка совместимости RequestManager.IsDocumentationSufficient(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.MeetingSetupAddActionOfMeeting">
            <summary>Задает оболочка совместимости RequestManager.add_MeetingSetup(Action`1&lt;Meeting&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.MeetingSetupRemoveActionOfMeeting">
            <summary>Задает оболочка совместимости RequestManager.remove_MeetingSetup(Action`1&lt;Meeting&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RejectAsyncClaimsPrincipalInt32String">
            <summary>Задает оболочка совместимости RequestManager.RejectAsync(ClaimsPrincipal principal, Int32 requestId, String rejectionReason)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RequestAcceptedAddActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.add_RequestAccepted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RequestAcceptedRemoveActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.remove_RequestAccepted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RequestRejectedAddActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.add_RequestRejected(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RequestRejectedRemoveActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.remove_RequestRejected(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RequestResolutionMadeAddActionOfRequestBoolean">
            <summary>Задает оболочка совместимости RequestManager.add_RequestResolutionMade(Action`2&lt;Request,Boolean&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RequestResolutionMadeRemoveActionOfRequestBoolean">
            <summary>Задает оболочка совместимости RequestManager.remove_RequestResolutionMade(Action`2&lt;Request,Boolean&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RequestSubmittedAddActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.add_RequestSubmitted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RequestSubmittedRemoveActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.remove_RequestSubmitted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RequestSubmittingAddFuncOfRequestBoolean">
            <summary>Задает оболочка совместимости RequestManager.add_RequestSubmitting(Func`2&lt;Request,Boolean&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RequestSubmittingRemoveFuncOfRequestBoolean">
            <summary>Задает оболочка совместимости RequestManager.remove_RequestSubmitting(Func`2&lt;Request,Boolean&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.RevokeAsyncClaimsPrincipalInt32String">
            <summary>Задает оболочка совместимости RequestManager.RevokeAsync(ClaimsPrincipal principal, Int32 requestId, String comments)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.SendMessageAsyncClaimsPrincipalRequestString">
            <summary>Задает оболочка совместимости RequestManager.SendMessageAsync(ClaimsPrincipal principal, Request request, String message)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.SetupMeetingAsyncClaimsPrincipalRequestDateTimeIEnumerableOfString">
            <summary>Задает оболочка совместимости RequestManager.SetupMeetingAsync(ClaimsPrincipal principal, Request request, DateTime meetingDate, IEnumerable`1&lt;String&gt; members)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.StartMeetingAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.StartMeetingAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.StartMeetingIfPossibleRequest">
            <summary>Задает оболочка совместимости RequestManager.StartMeetingIfPossible(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.StartVotingAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.StartVotingAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.StopMeetingAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.StopMeetingAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.SubmitAsyncClaimsPrincipalInt32Int32String">
            <summary>Задает оболочка совместимости RequestManager.SubmitAsync(ClaimsPrincipal principal, Int32 requestId, Int32 committeeId, String comments)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.ThrowIfDisposed">
            <summary>Задает оболочка совместимости RequestManager.ThrowIfDisposed()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.UpdateAsyncClaimsPrincipalRequest">
            <summary>Задает оболочка совместимости RequestManager.UpdateAsync(ClaimsPrincipal principal, Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.UploadDocumentationAsyncClaimsPrincipalInt32DocumentationTypeStringStringStream">
            <summary>Задает оболочка совместимости RequestManager.UploadDocumentationAsync(ClaimsPrincipal principal, Int32 requestId, DocumentationType fileType, String filename, String contentType, Stream dataStream)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.VoteAbstainAsyncClaimsPrincipalMeeting">
            <summary>Задает оболочка совместимости RequestManager.VoteAbstainAsync(ClaimsPrincipal principal, Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.VoteAcceptAsyncClaimsPrincipalMeeting">
            <summary>Задает оболочка совместимости RequestManager.VoteAcceptAsync(ClaimsPrincipal principal, Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.VoteMadeAddActionOfRequestClaimsPrincipalVoteStatus">
            <summary>Задает оболочка совместимости RequestManager.add_VoteMade(Action`3&lt;Request,ClaimsPrincipal,VoteStatus&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.VoteMadeRemoveActionOfRequestClaimsPrincipalVoteStatus">
            <summary>Задает оболочка совместимости RequestManager.remove_VoteMade(Action`3&lt;Request,ClaimsPrincipal,VoteStatus&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.VoteRejectAsyncClaimsPrincipalMeeting">
            <summary>Задает оболочка совместимости RequestManager.VoteRejectAsync(ClaimsPrincipal principal, Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.VotingStartedAddActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.add_VotingStarted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestManager.AllInstances.VotingStartedRemoveActionOfRequest">
            <summary>Задает оболочка совместимости RequestManager.remove_VotingStarted(Action`1&lt;Request&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestNotifications">
            <summary>Тип оболочки совместимости для LecOnline.Core.RequestNotifications</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestNotifications.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestNotifications.#ctor(LecOnline.Core.RequestNotifications)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestNotifications.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestNotifications.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestNotifications.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.ConstructorRequestManagerApplicationUserManager">
            <summary>Задает оболочка совместимости RequestNotifications.RequestNotifications(RequestManager manager, ApplicationUserManager userManager)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.CreateMailClient">
            <summary>Задает оболочка совместимости RequestNotifications.CreateMailClient()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.Dispose">
            <summary>Задает оболочка совместимости RequestNotifications.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.OnMeetingSetupAsyncMeeting">
            <summary>Задает оболочка совместимости RequestNotifications.OnMeetingSetupAsync(Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.OnMeetingSetupMeeting">
            <summary>Задает оболочка совместимости RequestNotifications.OnMeetingSetup(Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.OnRequestAcceptedRequest">
            <summary>Задает оболочка совместимости RequestNotifications.OnRequestAccepted(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.OnRequestRejectedRequest">
            <summary>Задает оболочка совместимости RequestNotifications.OnRequestRejected(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.OnRequestResolutionMadeAsyncRequestBoolean">
            <summary>Задает оболочка совместимости RequestNotifications.OnRequestResolutionMadeAsync(Request request, Boolean accepted)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.OnRequestResolutionMadeRequestBoolean">
            <summary>Задает оболочка совместимости RequestNotifications.OnRequestResolutionMade(Request request, Boolean accepted)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.OnRequestSubmittedRequest">
            <summary>Задает оболочка совместимости RequestNotifications.OnRequestSubmitted(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.Subscribe">
            <summary>Задает оболочка совместимости RequestNotifications.Subscribe()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.Unsubscribe">
            <summary>Задает оболочка совместимости RequestNotifications.Unsubscribe()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances.Dispose">
            <summary>Задает оболочка совместимости RequestNotifications.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances.OnMeetingSetupAsyncMeeting">
            <summary>Задает оболочка совместимости RequestNotifications.OnMeetingSetupAsync(Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances.OnMeetingSetupMeeting">
            <summary>Задает оболочка совместимости RequestNotifications.OnMeetingSetup(Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances.OnRequestAcceptedRequest">
            <summary>Задает оболочка совместимости RequestNotifications.OnRequestAccepted(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances.OnRequestRejectedRequest">
            <summary>Задает оболочка совместимости RequestNotifications.OnRequestRejected(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances.OnRequestResolutionMadeAsyncRequestBoolean">
            <summary>Задает оболочка совместимости RequestNotifications.OnRequestResolutionMadeAsync(Request request, Boolean accepted)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances.OnRequestResolutionMadeRequestBoolean">
            <summary>Задает оболочка совместимости RequestNotifications.OnRequestResolutionMade(Request request, Boolean accepted)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances.OnRequestSubmittedRequest">
            <summary>Задает оболочка совместимости RequestNotifications.OnRequestSubmitted(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances.Subscribe">
            <summary>Задает оболочка совместимости RequestNotifications.Subscribe()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestNotifications.AllInstances.Unsubscribe">
            <summary>Задает оболочка совместимости RequestNotifications.Unsubscribe()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestStore">
            <summary>Тип оболочки совместимости для LecOnline.Core.RequestStore</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestStore.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestStore.#ctor(LecOnline.Core.RequestStore)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestStore.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestStore.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestStore.Bind(LecOnline.Core.IRequestStore)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRequestStore.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.ConstructorLecOnlineDbEntities">
            <summary>Задает оболочка совместимости RequestStore.RequestStore(LecOnlineDbEntities context)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.CreateAsyncMeeting">
            <summary>Задает оболочка совместимости RequestStore.CreateAsync(Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.CreateAsyncMeetingChatMessage">
            <summary>Задает оболочка совместимости RequestStore.CreateAsync(MeetingChatMessage message)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.CreateAsyncRequest">
            <summary>Задает оболочка совместимости RequestStore.CreateAsync(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.CreateAsyncRequestAction">
            <summary>Задает оболочка совместимости RequestStore.CreateAsync(RequestAction requestAction)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.CreateAsyncRequestDocumentation">
            <summary>Задает оболочка совместимости RequestStore.CreateAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.DeleteAsyncRequest">
            <summary>Задает оболочка совместимости RequestStore.DeleteAsync(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.DeleteAsyncRequestDocumentation">
            <summary>Задает оболочка совместимости RequestStore.DeleteAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.Dispose">
            <summary>Задает оболочка совместимости RequestStore.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.DisposeBoolean">
            <summary>Задает оболочка совместимости RequestStore.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.FindByIdInt32">
            <summary>Задает оболочка совместимости RequestStore.FindById(Int32 requestId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.FindDocumentationByIdAsyncInt32">
            <summary>Задает оболочка совместимости RequestStore.FindDocumentationByIdAsync(Int32 documentationId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.GetChangedObject">
            <summary>Задает оболочка совместимости RequestStore.GetChanged(Object entity)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.GetRequestAggregateAsyncExpressionOfFuncOfRequestBoolean">
            <summary>Задает оболочка совместимости RequestStore.GetRequestAggregateAsync(Expression`1&lt;Func`2&lt;Request,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.GetRequestDocumentationAggregateAsyncExpressionOfFuncOfRequestDocumentationBoolean">
            <summary>Задает оболочка совместимости RequestStore.GetRequestDocumentationAggregateAsync(Expression`1&lt;Func`2&lt;RequestDocumentation,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.MeetingChatMessagesGet">
            <summary>Задает оболочка совместимости RequestStore.get_MeetingChatMessages()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.RequestsGet">
            <summary>Задает оболочка совместимости RequestStore.get_Requests()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.ThrowIfDisposed">
            <summary>Задает оболочка совместимости RequestStore.ThrowIfDisposed()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.UpdateAsyncMeeting">
            <summary>Задает оболочка совместимости RequestStore.UpdateAsync(Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.UpdateAsyncMeetingAttendee">
            <summary>Задает оболочка совместимости RequestStore.UpdateAsync(MeetingAttendee attendee)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.UpdateAsyncRequest">
            <summary>Задает оболочка совместимости RequestStore.UpdateAsync(Request request)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRequestStore.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.CreateAsyncMeeting">
            <summary>Задает оболочка совместимости RequestStore.CreateAsync(Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.CreateAsyncMeetingChatMessage">
            <summary>Задает оболочка совместимости RequestStore.CreateAsync(MeetingChatMessage message)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.CreateAsyncRequest">
            <summary>Задает оболочка совместимости RequestStore.CreateAsync(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.CreateAsyncRequestAction">
            <summary>Задает оболочка совместимости RequestStore.CreateAsync(RequestAction requestAction)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.CreateAsyncRequestDocumentation">
            <summary>Задает оболочка совместимости RequestStore.CreateAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.DeleteAsyncRequest">
            <summary>Задает оболочка совместимости RequestStore.DeleteAsync(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.DeleteAsyncRequestDocumentation">
            <summary>Задает оболочка совместимости RequestStore.DeleteAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.Dispose">
            <summary>Задает оболочка совместимости RequestStore.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости RequestStore.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.FindByIdInt32">
            <summary>Задает оболочка совместимости RequestStore.FindById(Int32 requestId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.FindDocumentationByIdAsyncInt32">
            <summary>Задает оболочка совместимости RequestStore.FindDocumentationByIdAsync(Int32 documentationId)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.GetChangedObject">
            <summary>Задает оболочка совместимости RequestStore.GetChanged(Object entity)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.GetRequestAggregateAsyncExpressionOfFuncOfRequestBoolean">
            <summary>Задает оболочка совместимости RequestStore.GetRequestAggregateAsync(Expression`1&lt;Func`2&lt;Request,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.GetRequestDocumentationAggregateAsyncExpressionOfFuncOfRequestDocumentationBoolean">
            <summary>Задает оболочка совместимости RequestStore.GetRequestDocumentationAggregateAsync(Expression`1&lt;Func`2&lt;RequestDocumentation,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.MeetingChatMessagesGet">
            <summary>Задает оболочка совместимости RequestStore.get_MeetingChatMessages()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.RequestsGet">
            <summary>Задает оболочка совместимости RequestStore.get_Requests()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.ThrowIfDisposed">
            <summary>Задает оболочка совместимости RequestStore.ThrowIfDisposed()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.UpdateAsyncMeeting">
            <summary>Задает оболочка совместимости RequestStore.UpdateAsync(Meeting meeting)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.UpdateAsyncMeetingAttendee">
            <summary>Задает оболочка совместимости RequestStore.UpdateAsync(MeetingAttendee attendee)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRequestStore.AllInstances.UpdateAsyncRequest">
            <summary>Задает оболочка совместимости RequestStore.UpdateAsync(Request request)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRoleNames">
            <summary>Тип оболочки совместимости для LecOnline.Core.RoleNames</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRoleNames.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRoleNames.#ctor(LecOnline.Core.RoleNames)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRoleNames.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimRoleNames.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRoleNames.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimRoleNames.Constructor">
            <summary>Задает оболочка совместимости RoleNames.RoleNames()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimRoleNames.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimSidebarItem">
            <summary>Тип оболочки совместимости для LecOnline.Core.SidebarItem</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimSidebarItem.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimSidebarItem.#ctor(LecOnline.Core.SidebarItem)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimSidebarItem.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimSidebarItem.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.ActionGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Action()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.ActionSetString">
            <summary>Задает оболочка совместимости SidebarItem.set_Action(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.Constructor">
            <summary>Задает оболочка совместимости SidebarItem.SidebarItem()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.ControllerGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Controller()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.ControllerSetString">
            <summary>Задает оболочка совместимости SidebarItem.set_Controller(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.IconGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Icon()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.IconSetString">
            <summary>Задает оболочка совместимости SidebarItem.set_Icon(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.IdGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.IdSetString">
            <summary>Задает оболочка совместимости SidebarItem.set_Id(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.IsActiveGet">
            <summary>Задает оболочка совместимости SidebarItem.get_IsActive()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.IsActiveSetBoolean">
            <summary>Задает оболочка совместимости SidebarItem.set_IsActive(Boolean value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.IsOpenGet">
            <summary>Задает оболочка совместимости SidebarItem.get_IsOpen()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.IsOpenSetBoolean">
            <summary>Задает оболочка совместимости SidebarItem.set_IsOpen(Boolean value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.ItemsGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Items()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.ItemsSetListOfSidebarItem">
            <summary>Задает оболочка совместимости SidebarItem.set_Items(List`1&lt;SidebarItem&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.RouteParametersGet">
            <summary>Задает оболочка совместимости SidebarItem.get_RouteParameters()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.RouteParametersSetObject">
            <summary>Задает оболочка совместимости SidebarItem.set_RouteParameters(Object value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.TitleGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Title()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.TitleSetString">
            <summary>Задает оболочка совместимости SidebarItem.set_Title(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.ActionGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Action()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.ActionSetString">
            <summary>Задает оболочка совместимости SidebarItem.set_Action(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.ControllerGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Controller()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.ControllerSetString">
            <summary>Задает оболочка совместимости SidebarItem.set_Controller(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.IconGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Icon()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.IconSetString">
            <summary>Задает оболочка совместимости SidebarItem.set_Icon(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.IdGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.IdSetString">
            <summary>Задает оболочка совместимости SidebarItem.set_Id(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.IsActiveGet">
            <summary>Задает оболочка совместимости SidebarItem.get_IsActive()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.IsActiveSetBoolean">
            <summary>Задает оболочка совместимости SidebarItem.set_IsActive(Boolean value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.IsOpenGet">
            <summary>Задает оболочка совместимости SidebarItem.get_IsOpen()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.IsOpenSetBoolean">
            <summary>Задает оболочка совместимости SidebarItem.set_IsOpen(Boolean value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.ItemsGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Items()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.ItemsSetListOfSidebarItem">
            <summary>Задает оболочка совместимости SidebarItem.set_Items(List`1&lt;SidebarItem&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.RouteParametersGet">
            <summary>Задает оболочка совместимости SidebarItem.get_RouteParameters()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.RouteParametersSetObject">
            <summary>Задает оболочка совместимости SidebarItem.set_RouteParameters(Object value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.TitleGet">
            <summary>Задает оболочка совместимости SidebarItem.get_Title()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarItem.AllInstances.TitleSetString">
            <summary>Задает оболочка совместимости SidebarItem.set_Title(String value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimSidebarManager">
            <summary>Тип оболочки совместимости для LecOnline.Core.SidebarManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimSidebarManager.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimSidebarManager.#ctor(LecOnline.Core.SidebarManager)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimSidebarManager.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimSidebarManager.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimSidebarManager.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.BuildMedicalCenterItemSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.BuildMedicalCenterItem(SidebarItem parent)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.BuildRequestsItemSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.BuildRequestsItem(SidebarItem parent)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.BuildSecurityItemSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.BuildSecurityItem(SidebarItem parent)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.BuildSettingsItemSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.BuildSettingsItem(SidebarItem parent)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.BuildUserItemSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.BuildUserItem(SidebarItem parent)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.ConstructorFuncOfClaimsPrincipal">
            <summary>Задает оболочка совместимости SidebarManager.SidebarManager(Func`1&lt;ClaimsPrincipal&gt; userBuilder)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.Dispose">
            <summary>Задает оболочка совместимости SidebarManager.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.FindByIdString">
            <summary>Задает оболочка совместимости SidebarManager.FindById(String id)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.FindByIdStringSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.FindById(String id, SidebarItem parent)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.GetRootSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.GetRootSidebarItem()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.UserGet">
            <summary>Задает оболочка совместимости SidebarManager.get_User()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.UserSetLazyOfClaimsPrincipal">
            <summary>Задает оболочка совместимости SidebarManager.set_User(Lazy`1&lt;ClaimsPrincipal&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimSidebarManager.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.AllInstances.BuildMedicalCenterItemSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.BuildMedicalCenterItem(SidebarItem parent)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.AllInstances.BuildRequestsItemSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.BuildRequestsItem(SidebarItem parent)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.AllInstances.BuildUserItemSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.BuildUserItem(SidebarItem parent)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.AllInstances.Dispose">
            <summary>Задает оболочка совместимости SidebarManager.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.AllInstances.FindByIdString">
            <summary>Задает оболочка совместимости SidebarManager.FindById(String id)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.AllInstances.GetRootSidebarItem">
            <summary>Задает оболочка совместимости SidebarManager.GetRootSidebarItem()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.AllInstances.UserGet">
            <summary>Задает оболочка совместимости SidebarManager.get_User()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimSidebarManager.AllInstances.UserSetLazyOfClaimsPrincipal">
            <summary>Задает оболочка совместимости SidebarManager.set_User(Lazy`1&lt;ClaimsPrincipal&gt; value)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimStringExtensions">
            <summary>Тип оболочки совместимости для LecOnline.Core.StringExtensions</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimStringExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimStringExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimStringExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimStringExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimStringExtensions.EllipsisStringInt32">
            <summary>Задает оболочка совместимости StringExtensions.Ellipsis(String data, Int32 length)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimUserActionProvider">
            <summary>Тип оболочки совместимости для LecOnline.Core.UserActionProvider</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimUserActionProvider.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimUserActionProvider.#ctor(LecOnline.Core.UserActionProvider)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimUserActionProvider.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimUserActionProvider.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimUserActionProvider.Bind(LecOnline.Core.IActionProvider)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimUserActionProvider.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimUserActionProvider.Constructor">
            <summary>Задает оболочка совместимости UserActionProvider.UserActionProvider()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimUserActionProvider.GetActionsClaimsPrincipalObject">
            <summary>Задает оболочка совместимости UserActionProvider.GetActions(ClaimsPrincipal principal, Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimUserActionProvider.IsTypeSuportedType">
            <summary>Задает оболочка совместимости UserActionProvider.IsTypeSuported(Type entityType)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimUserActionProvider.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimUserActionProvider.AllInstances.GetActionsClaimsPrincipalObject">
            <summary>Задает оболочка совместимости UserActionProvider.GetActions(ClaimsPrincipal principal, Object item)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimUserActionProvider.AllInstances.IsTypeSuportedType">
            <summary>Задает оболочка совместимости UserActionProvider.IsTypeSuported(Type entityType)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.ShimWellKnownClaims">
            <summary>Тип оболочки совместимости для LecOnline.Core.WellKnownClaims</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimWellKnownClaims.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimWellKnownClaims.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.ShimWellKnownClaims.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimWellKnownClaims.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimWellKnownClaims.GetClientClaimsPrincipal">
            <summary>Задает оболочка совместимости WellKnownClaims.GetClient(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimWellKnownClaims.GetCommitteeChairmanClaimsPrincipal">
            <summary>Задает оболочка совместимости WellKnownClaims.GetCommitteeChairman(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimWellKnownClaims.GetCommitteeClaimsPrincipal">
            <summary>Задает оболочка совместимости WellKnownClaims.GetCommittee(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimWellKnownClaims.GetCommitteeSecretaryClaimsPrincipal">
            <summary>Задает оболочка совместимости WellKnownClaims.GetCommitteeSecretary(ClaimsPrincipal principal)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.ShimWellKnownClaims.GetInt32ClaimsPrincipalString">
            <summary>Задает оболочка совместимости WellKnownClaims.GetInt32(ClaimsPrincipal principal, String claim)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubActionDescription">
            <summary>Тип заглушки LecOnline.Core.ActionDescription</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubActionDescription.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubActionDescription.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubActionDescription</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubActionDescription.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubActionDescription.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubActionDescription.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubActionsManager">
            <summary>Тип заглушки LecOnline.Core.ActionsManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubActionsManager.#ctor(System.Func{System.Security.Claims.ClaimsPrincipal})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubActionsManager.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubActionsManager</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubActionsManager.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubActionsManager.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubActionsManager.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubApplicationDbContext">
            <summary>Тип заглушки LecOnline.Core.ApplicationDbContext</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.AttachBackingFieldToRoles">
            <summary>Присоединение делегатов для эмуляции StubApplicationDbContext.Roles как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.AttachBackingFieldToUsers">
            <summary>Присоединение делегатов для эмуляции StubApplicationDbContext.Users как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.Dispose(System.Boolean)">
            <summary>Задает заглушка DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.DisposeBoolean">
            <summary>Задает stub DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.Equals(System.Object)">
            <summary>Задает заглушка DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.EqualsObject">
            <summary>Задает stub DbContext.Equals(Object obj)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.GetHashCode">
            <summary>Задает заглушка DbContext.GetHashCode()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.GetHashCode01">
            <summary>Задает stub DbContext.GetHashCode()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubApplicationDbContext</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Задает заглушка IdentityDbContext`6.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.OnModelCreatingDbModelBuilder">
            <summary>Задает stub IdentityDbContext`6.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.RolesGet">
            <summary>Задает stub IdentityDbContext`6.get_Roles()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.RolesSetIDbSetOfIdentityRole">
            <summary>Задает stub IdentityDbContext`6.set_Roles(IDbSet`1&lt;!1&gt; value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.SaveChanges">
            <summary>Задает заглушка DbContext.SaveChanges()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.SaveChanges01">
            <summary>Задает stub DbContext.SaveChanges()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.SaveChangesAsync">
            <summary>Задает заглушка DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>Задает заглушка DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.SaveChangesAsync01">
            <summary>Задает stub DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.SaveChangesAsyncCancellationToken">
            <summary>Задает stub DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.Set(System.Type)">
            <summary>Задает заглушка DbContext.Set(Type entityType)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.Set``1">
            <summary>Задает заглушка DbContext.Set()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.SetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{``0}})">
            <summary>Задает заглушки Set()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.SetType">
            <summary>Задает stub DbContext.Set(Type entityType)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Задает заглушка DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.ShouldValidateEntityDbEntityEntry">
            <summary>Задает stub DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.ToString">
            <summary>Задает заглушка DbContext.ToString()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.ToString01">
            <summary>Задает stub DbContext.ToString()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.UsersGet">
            <summary>Задает stub IdentityDbContext`6.get_Users()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.UsersSetIDbSetOfApplicationUser">
            <summary>Задает stub IdentityDbContext`6.set_Users(IDbSet`1&lt;!0&gt; value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationDbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Задает заглушка IdentityDbContext`6.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationDbContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Задает stub IdentityDbContext`6.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationDbContext.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationDbContext.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationDbContext.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationDbContext.Roles">
            <summary>Задает stub IdentityDbContext`6.get_Roles()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationDbContext.Users">
            <summary>Задает stub IdentityDbContext`6.get_Users()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubApplicationUser">
            <summary>Тип заглушки LecOnline.Core.ApplicationUser</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.AccessFailedCountGet">
            <summary>Задает stub IdentityUser`4.get_AccessFailedCount()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.AccessFailedCountSetInt32">
            <summary>Задает stub IdentityUser`4.set_AccessFailedCount(Int32 value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToAccessFailedCount">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.AccessFailedCount как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToEmail">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.Email как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToEmailConfirmed">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.EmailConfirmed как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToId">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.Id как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToLockoutEnabled">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.LockoutEnabled как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToLockoutEndDateUtc">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.LockoutEndDateUtc как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToPasswordHash">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.PasswordHash как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToPhoneNumber">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.PhoneNumber как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToPhoneNumberConfirmed">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.PhoneNumberConfirmed как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToSecurityStamp">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.SecurityStamp как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToTwoFactorEnabled">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.TwoFactorEnabled как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.AttachBackingFieldToUserName">
            <summary>Присоединение делегатов для эмуляции StubApplicationUser.UserName как свойства с резервным полем.</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.EmailConfirmedGet">
            <summary>Задает stub IdentityUser`4.get_EmailConfirmed()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.EmailConfirmedSetBoolean">
            <summary>Задает stub IdentityUser`4.set_EmailConfirmed(Boolean value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.EmailGet">
            <summary>Задает stub IdentityUser`4.get_Email()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.EmailSetString">
            <summary>Задает stub IdentityUser`4.set_Email(String value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.IdGet">
            <summary>Задает stub IdentityUser`4.get_Id()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.IdSetString">
            <summary>Задает stub IdentityUser`4.set_Id(!0 value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUser.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubApplicationUser</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.LockoutEnabledGet">
            <summary>Задает stub IdentityUser`4.get_LockoutEnabled()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.LockoutEnabledSetBoolean">
            <summary>Задает stub IdentityUser`4.set_LockoutEnabled(Boolean value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.LockoutEndDateUtcGet">
            <summary>Задает stub IdentityUser`4.get_LockoutEndDateUtc()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.LockoutEndDateUtcSetNullableOfDateTime">
            <summary>Задает stub IdentityUser`4.set_LockoutEndDateUtc(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.PasswordHashGet">
            <summary>Задает stub IdentityUser`4.get_PasswordHash()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.PasswordHashSetString">
            <summary>Задает stub IdentityUser`4.set_PasswordHash(String value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.PhoneNumberConfirmedGet">
            <summary>Задает stub IdentityUser`4.get_PhoneNumberConfirmed()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.PhoneNumberConfirmedSetBoolean">
            <summary>Задает stub IdentityUser`4.set_PhoneNumberConfirmed(Boolean value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.PhoneNumberGet">
            <summary>Задает stub IdentityUser`4.get_PhoneNumber()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.PhoneNumberSetString">
            <summary>Задает stub IdentityUser`4.set_PhoneNumber(String value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.SecurityStampGet">
            <summary>Задает stub IdentityUser`4.get_SecurityStamp()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.SecurityStampSetString">
            <summary>Задает stub IdentityUser`4.set_SecurityStamp(String value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.TwoFactorEnabledGet">
            <summary>Задает stub IdentityUser`4.get_TwoFactorEnabled()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.TwoFactorEnabledSetBoolean">
            <summary>Задает stub IdentityUser`4.set_TwoFactorEnabled(Boolean value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.UserNameGet">
            <summary>Задает stub IdentityUser`4.get_UserName()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUser.UserNameSetString">
            <summary>Задает stub IdentityUser`4.set_UserName(String value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.AccessFailedCount">
            <summary>Задает stub IdentityUser`4.get_AccessFailedCount()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.Email">
            <summary>Задает stub IdentityUser`4.get_Email()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.EmailConfirmed">
            <summary>Задает stub IdentityUser`4.get_EmailConfirmed()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.Id">
            <summary>Задает stub IdentityUser`4.get_Id()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.LockoutEnabled">
            <summary>Задает stub IdentityUser`4.get_LockoutEnabled()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.LockoutEndDateUtc">
            <summary>Задает stub IdentityUser`4.get_LockoutEndDateUtc()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.PasswordHash">
            <summary>Задает stub IdentityUser`4.get_PasswordHash()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.PhoneNumber">
            <summary>Задает stub IdentityUser`4.get_PhoneNumber()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.PhoneNumberConfirmed">
            <summary>Задает stub IdentityUser`4.get_PhoneNumberConfirmed()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.SecurityStamp">
            <summary>Задает stub IdentityUser`4.get_SecurityStamp()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.TwoFactorEnabled">
            <summary>Задает stub IdentityUser`4.get_TwoFactorEnabled()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUser.UserName">
            <summary>Задает stub IdentityUser`4.get_UserName()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubApplicationUserManager">
            <summary>Тип заглушки LecOnline.Core.ApplicationUserManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.#ctor(Microsoft.AspNet.Identity.IUserStore{LecOnline.Core.ApplicationUser})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.AccessFailedAsync(System.String)">
            <summary>Задает заглушка UserManager`2.AccessFailedAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.AccessFailedAsyncString">
            <summary>Задает stub UserManager`2.AccessFailedAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.AddClaimAsync(System.String,System.Security.Claims.Claim)">
            <summary>Задает заглушка UserManager`2.AddClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.AddClaimAsyncStringClaim">
            <summary>Задает stub UserManager`2.AddClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.AddLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Задает заглушка UserManager`2.AddLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.AddLoginAsyncStringUserLoginInfo">
            <summary>Задает stub UserManager`2.AddLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.AddPasswordAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.AddPasswordAsync(!1 userId, String password)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.AddPasswordAsyncStringString">
            <summary>Задает stub UserManager`2.AddPasswordAsync(!1 userId, String password)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.AddToRoleAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.AddToRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.AddToRoleAsyncStringString">
            <summary>Задает stub UserManager`2.AddToRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.AddToRolesAsync(System.String,System.String[])">
            <summary>Задает заглушка UserManager`2.AddToRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.AddToRolesAsyncStringStringArray">
            <summary>Задает stub UserManager`2.AddToRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.ChangePasswordAsync(System.String,System.String,System.String)">
            <summary>Задает заглушка UserManager`2.ChangePasswordAsync(!1 userId, String currentPassword, String newPassword)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.ChangePasswordAsyncStringStringString">
            <summary>Задает stub UserManager`2.ChangePasswordAsync(!1 userId, String currentPassword, String newPassword)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.ChangePhoneNumberAsync(System.String,System.String,System.String)">
            <summary>Задает заглушка UserManager`2.ChangePhoneNumberAsync(!1 userId, String phoneNumber, String token)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.ChangePhoneNumberAsyncStringStringString">
            <summary>Задает stub UserManager`2.ChangePhoneNumberAsync(!1 userId, String phoneNumber, String token)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.CheckPasswordAsync(LecOnline.Core.ApplicationUser,System.String)">
            <summary>Задает заглушка UserManager`2.CheckPasswordAsync(!0 user, String password)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.CheckPasswordAsyncApplicationUserString">
            <summary>Задает stub UserManager`2.CheckPasswordAsync(!0 user, String password)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.ConfirmEmailAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.ConfirmEmailAsync(!1 userId, String token)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.ConfirmEmailAsyncStringString">
            <summary>Задает stub UserManager`2.ConfirmEmailAsync(!1 userId, String token)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.CreateAsync(LecOnline.Core.ApplicationUser)">
            <summary>Задает заглушка ApplicationUserManager.CreateAsync(ApplicationUser user)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.CreateAsync(LecOnline.Core.ApplicationUser,System.String)">
            <summary>Задает заглушка UserManager`2.CreateAsync(!0 user, String password)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.CreateAsyncApplicationUser">
            <summary>Задает stub ApplicationUserManager.CreateAsync(ApplicationUser user)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.CreateAsyncApplicationUserString">
            <summary>Задает stub UserManager`2.CreateAsync(!0 user, String password)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.CreateIdentityAsync(LecOnline.Core.ApplicationUser,System.String)">
            <summary>Задает заглушка UserManager`2.CreateIdentityAsync(!0 user, String authenticationType)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.CreateIdentityAsyncApplicationUserString">
            <summary>Задает stub UserManager`2.CreateIdentityAsync(!0 user, String authenticationType)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.DeleteAsync(LecOnline.Core.ApplicationUser)">
            <summary>Задает заглушка UserManager`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.DeleteAsyncApplicationUser">
            <summary>Задает stub UserManager`2.DeleteAsync(!0 user)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.Dispose(System.Boolean)">
            <summary>Задает заглушка UserManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.DisposeBoolean">
            <summary>Задает stub UserManager`2.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Задает заглушка UserManager`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.FindAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.FindAsync(String userName, String password)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.FindAsyncStringString">
            <summary>Задает stub UserManager`2.FindAsync(String userName, String password)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.FindAsyncUserLoginInfo">
            <summary>Задает stub UserManager`2.FindAsync(UserLoginInfo login)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.FindByEmailAsync(System.String)">
            <summary>Задает заглушка UserManager`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.FindByEmailAsyncString">
            <summary>Задает stub UserManager`2.FindByEmailAsync(String email)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.FindByIdAsync(System.String)">
            <summary>Задает заглушка UserManager`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.FindByIdAsyncString">
            <summary>Задает stub UserManager`2.FindByIdAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.FindByNameAsync(System.String)">
            <summary>Задает заглушка UserManager`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.FindByNameAsyncString">
            <summary>Задает stub UserManager`2.FindByNameAsync(String userName)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GenerateChangePhoneNumberTokenAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.GenerateChangePhoneNumberTokenAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GenerateChangePhoneNumberTokenAsyncStringString">
            <summary>Задает stub UserManager`2.GenerateChangePhoneNumberTokenAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GenerateEmailConfirmationTokenAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GenerateEmailConfirmationTokenAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GenerateEmailConfirmationTokenAsyncString">
            <summary>Задает stub UserManager`2.GenerateEmailConfirmationTokenAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GeneratePasswordResetTokenAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GeneratePasswordResetTokenAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GeneratePasswordResetTokenAsyncString">
            <summary>Задает stub UserManager`2.GeneratePasswordResetTokenAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GenerateTwoFactorTokenAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.GenerateTwoFactorTokenAsync(!1 userId, String twoFactorProvider)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GenerateTwoFactorTokenAsyncStringString">
            <summary>Задает stub UserManager`2.GenerateTwoFactorTokenAsync(!1 userId, String twoFactorProvider)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GenerateUserTokenAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.GenerateUserTokenAsync(String purpose, !1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GenerateUserTokenAsyncStringString">
            <summary>Задает stub UserManager`2.GenerateUserTokenAsync(String purpose, !1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetAccessFailedCountAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetAccessFailedCountAsyncString">
            <summary>Задает stub UserManager`2.GetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetClaimsAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetClaimsAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetClaimsAsyncString">
            <summary>Задает stub UserManager`2.GetClaimsAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetEmailAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetEmailAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetEmailAsyncString">
            <summary>Задает stub UserManager`2.GetEmailAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetLockoutEnabledAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetLockoutEnabledAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetLockoutEnabledAsyncString">
            <summary>Задает stub UserManager`2.GetLockoutEnabledAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetLockoutEndDateAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetLockoutEndDateAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetLockoutEndDateAsyncString">
            <summary>Задает stub UserManager`2.GetLockoutEndDateAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetLoginsAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetLoginsAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetLoginsAsyncString">
            <summary>Задает stub UserManager`2.GetLoginsAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetPhoneNumberAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetPhoneNumberAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetPhoneNumberAsyncString">
            <summary>Задает stub UserManager`2.GetPhoneNumberAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetRolesAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetRolesAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetRolesAsyncString">
            <summary>Задает stub UserManager`2.GetRolesAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetSecurityStampAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetSecurityStampAsyncString">
            <summary>Задает stub UserManager`2.GetSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetTwoFactorEnabledAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetTwoFactorEnabledAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetTwoFactorEnabledAsyncString">
            <summary>Задает stub UserManager`2.GetTwoFactorEnabledAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.GetValidTwoFactorProvidersAsync(System.String)">
            <summary>Задает заглушка UserManager`2.GetValidTwoFactorProvidersAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.GetValidTwoFactorProvidersAsyncString">
            <summary>Задает stub UserManager`2.GetValidTwoFactorProvidersAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.HasPasswordAsync(System.String)">
            <summary>Задает заглушка UserManager`2.HasPasswordAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.HasPasswordAsyncString">
            <summary>Задает stub UserManager`2.HasPasswordAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubApplicationUserManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.IsEmailConfirmedAsync(System.String)">
            <summary>Задает заглушка UserManager`2.IsEmailConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.IsEmailConfirmedAsyncString">
            <summary>Задает stub UserManager`2.IsEmailConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.IsInRoleAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.IsInRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.IsInRoleAsyncStringString">
            <summary>Задает stub UserManager`2.IsInRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.IsLockedOutAsync(System.String)">
            <summary>Задает заглушка UserManager`2.IsLockedOutAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.IsLockedOutAsyncString">
            <summary>Задает stub UserManager`2.IsLockedOutAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.IsPhoneNumberConfirmedAsync(System.String)">
            <summary>Задает заглушка UserManager`2.IsPhoneNumberConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.IsPhoneNumberConfirmedAsyncString">
            <summary>Задает stub UserManager`2.IsPhoneNumberConfirmedAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.NotifyTwoFactorTokenAsync(System.String,System.String,System.String)">
            <summary>Задает заглушка UserManager`2.NotifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.NotifyTwoFactorTokenAsyncStringStringString">
            <summary>Задает stub UserManager`2.NotifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{LecOnline.Core.ApplicationUser,System.String})">
            <summary>Задает заглушка UserManager`2.RegisterTwoFactorProvider(String twoFactorProvider, IUserTokenProvider`2&lt;!0,!1&gt; provider)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.RegisterTwoFactorProviderStringIUserTokenProviderOfApplicationUserString">
            <summary>Задает stub UserManager`2.RegisterTwoFactorProvider(String twoFactorProvider, IUserTokenProvider`2&lt;!0,!1&gt; provider)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.RemoveClaimAsync(System.String,System.Security.Claims.Claim)">
            <summary>Задает заглушка UserManager`2.RemoveClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.RemoveClaimAsyncStringClaim">
            <summary>Задает stub UserManager`2.RemoveClaimAsync(!1 userId, Claim claim)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.RemoveFromRoleAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.RemoveFromRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.RemoveFromRoleAsyncStringString">
            <summary>Задает stub UserManager`2.RemoveFromRoleAsync(!1 userId, String role)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.RemoveFromRolesAsync(System.String,System.String[])">
            <summary>Задает заглушка UserManager`2.RemoveFromRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.RemoveFromRolesAsyncStringStringArray">
            <summary>Задает stub UserManager`2.RemoveFromRolesAsync(!1 userId, String[] roles)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.RemoveLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>Задает заглушка UserManager`2.RemoveLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.RemoveLoginAsyncStringUserLoginInfo">
            <summary>Задает stub UserManager`2.RemoveLoginAsync(!1 userId, UserLoginInfo login)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.RemovePasswordAsync(System.String)">
            <summary>Задает заглушка UserManager`2.RemovePasswordAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.RemovePasswordAsyncString">
            <summary>Задает stub UserManager`2.RemovePasswordAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.ResetAccessFailedCountAsync(System.String)">
            <summary>Задает заглушка UserManager`2.ResetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.ResetAccessFailedCountAsyncString">
            <summary>Задает stub UserManager`2.ResetAccessFailedCountAsync(!1 userId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.ResetPasswordAsync(System.String,System.String,System.String)">
            <summary>Задает заглушка UserManager`2.ResetPasswordAsync(!1 userId, String token, String newPassword)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.ResetPasswordAsyncStringStringString">
            <summary>Задает stub UserManager`2.ResetPasswordAsync(!1 userId, String token, String newPassword)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.SendEmailAsync(System.String,System.String,System.String)">
            <summary>Задает заглушка UserManager`2.SendEmailAsync(!1 userId, String subject, String body)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SendEmailAsyncStringStringString">
            <summary>Задает stub UserManager`2.SendEmailAsync(!1 userId, String subject, String body)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.SendSmsAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.SendSmsAsync(!1 userId, String message)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SendSmsAsyncStringString">
            <summary>Задает stub UserManager`2.SendSmsAsync(!1 userId, String message)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.SetEmailAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.SetEmailAsync(!1 userId, String email)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SetEmailAsyncStringString">
            <summary>Задает stub UserManager`2.SetEmailAsync(!1 userId, String email)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.SetLockoutEnabledAsync(System.String,System.Boolean)">
            <summary>Задает заглушка UserManager`2.SetLockoutEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SetLockoutEnabledAsyncStringBoolean">
            <summary>Задает stub UserManager`2.SetLockoutEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.SetLockoutEndDateAsync(System.String,System.DateTimeOffset)">
            <summary>Задает заглушка UserManager`2.SetLockoutEndDateAsync(!1 userId, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SetLockoutEndDateAsyncStringDateTimeOffset">
            <summary>Задает stub UserManager`2.SetLockoutEndDateAsync(!1 userId, DateTimeOffset lockoutEnd)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.SetPhoneNumberAsync(System.String,System.String)">
            <summary>Задает заглушка UserManager`2.SetPhoneNumberAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SetPhoneNumberAsyncStringString">
            <summary>Задает stub UserManager`2.SetPhoneNumberAsync(!1 userId, String phoneNumber)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.SetTwoFactorEnabledAsync(System.String,System.Boolean)">
            <summary>Задает заглушка UserManager`2.SetTwoFactorEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SetTwoFactorEnabledAsyncStringBoolean">
            <summary>Задает stub UserManager`2.SetTwoFactorEnabledAsync(!1 userId, Boolean enabled)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsQueryableUsersGet">
            <summary>Задает stub UserManager`2.get_SupportsQueryableUsers()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserClaimGet">
            <summary>Задает stub UserManager`2.get_SupportsUserClaim()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserEmailGet">
            <summary>Задает stub UserManager`2.get_SupportsUserEmail()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserLockoutGet">
            <summary>Задает stub UserManager`2.get_SupportsUserLockout()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserLoginGet">
            <summary>Задает stub UserManager`2.get_SupportsUserLogin()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserPasswordGet">
            <summary>Задает stub UserManager`2.get_SupportsUserPassword()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserPhoneNumberGet">
            <summary>Задает stub UserManager`2.get_SupportsUserPhoneNumber()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserRoleGet">
            <summary>Задает stub UserManager`2.get_SupportsUserRole()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserSecurityStampGet">
            <summary>Задает stub UserManager`2.get_SupportsUserSecurityStamp()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserTwoFactorGet">
            <summary>Задает stub UserManager`2.get_SupportsUserTwoFactor()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.UpdateAsync(LecOnline.Core.ApplicationUser)">
            <summary>Задает заглушка ApplicationUserManager.UpdateAsync(ApplicationUser user)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.UpdateAsyncApplicationUser">
            <summary>Задает stub ApplicationUserManager.UpdateAsync(ApplicationUser user)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{LecOnline.Core.ApplicationUser,System.String},LecOnline.Core.ApplicationUser,System.String)">
            <summary>Задает заглушка UserManager`2.UpdatePassword(IUserPasswordStore`2&lt;!0,!1&gt; passwordStore, !0 user, String newPassword)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.UpdatePasswordIUserPasswordStoreOfApplicationUserStringApplicationUserString">
            <summary>Задает stub UserManager`2.UpdatePassword(IUserPasswordStore`2&lt;!0,!1&gt; passwordStore, !0 user, String newPassword)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.UpdateSecurityStampAsync(System.String)">
            <summary>Задает заглушка UserManager`2.UpdateSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.UpdateSecurityStampAsyncString">
            <summary>Задает stub UserManager`2.UpdateSecurityStampAsync(!1 userId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.UsersGet">
            <summary>Задает stub UserManager`2.get_Users()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.VerifyChangePhoneNumberTokenAsync(System.String,System.String,System.String)">
            <summary>Задает заглушка UserManager`2.VerifyChangePhoneNumberTokenAsync(!1 userId, String token, String phoneNumber)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.VerifyChangePhoneNumberTokenAsyncStringStringString">
            <summary>Задает stub UserManager`2.VerifyChangePhoneNumberTokenAsync(!1 userId, String token, String phoneNumber)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{LecOnline.Core.ApplicationUser,System.String},LecOnline.Core.ApplicationUser,System.String)">
            <summary>Задает заглушка UserManager`2.VerifyPasswordAsync(IUserPasswordStore`2&lt;!0,!1&gt; store, !0 user, String password)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.VerifyPasswordAsyncIUserPasswordStoreOfApplicationUserStringApplicationUserString">
            <summary>Задает stub UserManager`2.VerifyPasswordAsync(IUserPasswordStore`2&lt;!0,!1&gt; store, !0 user, String password)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.VerifyTwoFactorTokenAsync(System.String,System.String,System.String)">
            <summary>Задает заглушка UserManager`2.VerifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.VerifyTwoFactorTokenAsyncStringStringString">
            <summary>Задает stub UserManager`2.VerifyTwoFactorTokenAsync(!1 userId, String twoFactorProvider, String token)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubApplicationUserManager.VerifyUserTokenAsync(System.String,System.String,System.String)">
            <summary>Задает заглушка UserManager`2.VerifyUserTokenAsync(!1 userId, String purpose, String token)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubApplicationUserManager.VerifyUserTokenAsyncStringStringString">
            <summary>Задает stub UserManager`2.VerifyUserTokenAsync(!1 userId, String purpose, String token)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsQueryableUsers">
            <summary>Задает stub UserManager`2.get_SupportsQueryableUsers()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserClaim">
            <summary>Задает stub UserManager`2.get_SupportsUserClaim()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserEmail">
            <summary>Задает stub UserManager`2.get_SupportsUserEmail()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserLockout">
            <summary>Задает stub UserManager`2.get_SupportsUserLockout()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserLogin">
            <summary>Задает stub UserManager`2.get_SupportsUserLogin()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserPassword">
            <summary>Задает stub UserManager`2.get_SupportsUserPassword()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserPhoneNumber">
            <summary>Задает stub UserManager`2.get_SupportsUserPhoneNumber()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserRole">
            <summary>Задает stub UserManager`2.get_SupportsUserRole()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserSecurityStamp">
            <summary>Задает stub UserManager`2.get_SupportsUserSecurityStamp()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.SupportsUserTwoFactor">
            <summary>Задает stub UserManager`2.get_SupportsUserTwoFactor()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubApplicationUserManager.Users">
            <summary>Задает stub UserManager`2.get_Users()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubChangeManager">
            <summary>Тип заглушки LecOnline.Core.ChangeManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubChangeManager.#ctor(LecOnline.Core.IChangeManagerStore)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubChangeManager.Dispose(System.Boolean)">
            <summary>Задает заглушка ChangeManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubChangeManager.DisposeBoolean">
            <summary>Задает stub ChangeManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubChangeManager.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubChangeManager</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubChangeManager.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubChangeManager.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubChangeManager.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubChangeManagerStore">
            <summary>Тип заглушки LecOnline.Core.ChangeManagerStore</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubChangeManagerStore.#ctor(LecOnline.Core.LecOnlineDbEntities)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubChangeManagerStore.Dispose(System.Boolean)">
            <summary>Задает заглушка ChangeManagerStore.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubChangeManagerStore.DisposeBoolean">
            <summary>Задает stub ChangeManagerStore.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubChangeManagerStore.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubChangeManagerStore</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubChangeManagerStore.RegisterAsync(LecOnline.Core.ChangesLog)">
            <summary>Задает заглушка ChangeManagerStore.RegisterAsync(ChangesLog logEntry)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubChangeManagerStore.RegisterAsyncChangesLog">
            <summary>Задает stub ChangeManagerStore.RegisterAsync(ChangesLog logEntry)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubChangeManagerStore.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubChangeManagerStore.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubChangeManagerStore.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubChangesLog">
            <summary>Тип заглушки LecOnline.Core.ChangesLog</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubChangesLog.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubChangesLog.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubChangesLog</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubChangesLog.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubChangesLog.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubChangesLog.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubClient">
            <summary>Тип заглушки LecOnline.Core.Client</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubClient.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubClient.AttachBackingFieldToRequests">
            <summary>Присоединение делегатов для эмуляции StubClient.Requests как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubClient.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubClient</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubClient.RequestsGet">
            <summary>Задает stub Client.get_Requests()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubClient.RequestsSetICollectionOfRequest">
            <summary>Задает stub Client.set_Requests(ICollection`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubClient.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubClient.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubClient.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubClient.Requests">
            <summary>Задает stub Client.get_Requests()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubCommittee">
            <summary>Тип заглушки LecOnline.Core.Committee</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubCommittee.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubCommittee.AttachBackingFieldToRequests">
            <summary>Присоединение делегатов для эмуляции StubCommittee.Requests как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubCommittee.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCommittee</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubCommittee.RequestsGet">
            <summary>Задает stub Committee.get_Requests()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubCommittee.RequestsSetICollectionOfRequest">
            <summary>Задает stub Committee.set_Requests(ICollection`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubCommittee.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubCommittee.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubCommittee.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubCommittee.Requests">
            <summary>Задает stub Committee.get_Requests()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubConfiguration">
            <summary>Тип заглушки LecOnline.Core.Configuration</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubConfiguration.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubConfiguration.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubConfiguration</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubConfiguration.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubConfiguration.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubConfiguration.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubErrorLog">
            <summary>Тип заглушки LecOnline.Core.ErrorLog</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubErrorLog.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubErrorLog.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubErrorLog</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubErrorLog.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubErrorLog.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubErrorLog.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubExceptionHelper">
            <summary>Тип заглушки LecOnline.Core.ExceptionHelper</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubExceptionHelper.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubExceptionHelper.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubExceptionHelper</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubExceptionHelper.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubExceptionHelper.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubExceptionHelper.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubGenericDetailActionProvider`1">
            <summary>Тип заглушки LecOnline.Core.GenericDetailActionProvider`1</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubGenericDetailActionProvider`1.#ctor(System.String,System.String[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubGenericDetailActionProvider`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubGenericDetailActionProvider</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubGenericDetailActionProvider`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubGenericDetailActionProvider`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubGenericDetailActionProvider`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubGenericEditActionProvider`1">
            <summary>Тип заглушки LecOnline.Core.GenericEditActionProvider`1</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubGenericEditActionProvider`1.#ctor(System.String[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubGenericEditActionProvider`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubGenericEditActionProvider</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubGenericEditActionProvider`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubGenericEditActionProvider`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubGenericEditActionProvider`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubIActionProvider">
            <summary>Тип заглушки LecOnline.Core.IActionProvider</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIActionProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubIActionProvider</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIActionProvider.GetActionsClaimsPrincipalObject">
            <summary>Задает stub IActionProvider.GetActions(ClaimsPrincipal principal, Object item)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIActionProvider.IsTypeSuportedType">
            <summary>Задает stub IActionProvider.IsTypeSuported(Type entityType)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIActionProvider.loc::LecOnline#Core#IActionProvider#GetActions(System.Security.Claims.ClaimsPrincipal,System.Object)">
            <summary>Задает заглушка IActionProvider.GetActions(ClaimsPrincipal principal, Object item)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIActionProvider.loc::LecOnline#Core#IActionProvider#IsTypeSuported(System.Type)">
            <summary>Задает заглушка IActionProvider.IsTypeSuported(Type entityType)</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubIChangeManagerStore">
            <summary>Тип заглушки LecOnline.Core.IChangeManagerStore</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIChangeManagerStore.#ctor">
            <summary>Инициализирует новый экземпляр type StubIChangeManagerStore</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIChangeManagerStore.ChangesLogsGet">
            <summary>Задает stub IChangeManagerStore.get_ChangesLogs()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIChangeManagerStore.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIChangeManagerStore.loc::LecOnline#Core#IChangeManagerStore#RegisterAsync(LecOnline.Core.ChangesLog)">
            <summary>Задает заглушка IChangeManagerStore.RegisterAsync(ChangesLog logEntry)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIChangeManagerStore.RegisterAsyncChangesLog">
            <summary>Задает stub IChangeManagerStore.RegisterAsync(ChangesLog logEntry)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIChangeManagerStore.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubIChangeManagerStore.loc::LecOnline#Core#IChangeManagerStore#ChangesLogs">
            <summary>Задает stub IChangeManagerStore.get_ChangesLogs()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubIRequestStore">
            <summary>Тип заглушки LecOnline.Core.IRequestStore</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.#ctor">
            <summary>Инициализирует новый экземпляр type StubIRequestStore</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.CreateAsyncMeeting">
            <summary>Задает stub IRequestStore.CreateAsync(Meeting meeting)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.CreateAsyncMeetingChatMessage">
            <summary>Задает stub IRequestStore.CreateAsync(MeetingChatMessage message)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.CreateAsyncRequest">
            <summary>Задает stub IRequestStore.CreateAsync(Request request)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.CreateAsyncRequestAction">
            <summary>Задает stub IRequestStore.CreateAsync(RequestAction requestAction)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.CreateAsyncRequestDocumentation">
            <summary>Задает stub IRequestStore.CreateAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.DeleteAsyncRequest">
            <summary>Задает stub IRequestStore.DeleteAsync(Request request)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.DeleteAsyncRequestDocumentation">
            <summary>Задает stub IRequestStore.DeleteAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.FindByIdInt32">
            <summary>Задает stub IRequestStore.FindById(Int32 requestId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.FindDocumentationByIdAsyncInt32">
            <summary>Задает stub IRequestStore.FindDocumentationByIdAsync(Int32 documentationId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.GetChangedObject">
            <summary>Задает stub IRequestStore.GetChanged(Object entity)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#CreateAsync(LecOnline.Core.Meeting)">
            <summary>Задает заглушка IRequestStore.CreateAsync(Meeting meeting)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#CreateAsync(LecOnline.Core.MeetingChatMessage)">
            <summary>Задает заглушка IRequestStore.CreateAsync(MeetingChatMessage message)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#CreateAsync(LecOnline.Core.Request)">
            <summary>Задает заглушка IRequestStore.CreateAsync(Request request)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#CreateAsync(LecOnline.Core.RequestAction)">
            <summary>Задает заглушка IRequestStore.CreateAsync(RequestAction requestAction)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#CreateAsync(LecOnline.Core.RequestDocumentation)">
            <summary>Задает заглушка IRequestStore.CreateAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#DeleteAsync(LecOnline.Core.Request)">
            <summary>Задает заглушка IRequestStore.DeleteAsync(Request request)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#DeleteAsync(LecOnline.Core.RequestDocumentation)">
            <summary>Задает заглушка IRequestStore.DeleteAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#FindById(System.Int32)">
            <summary>Задает заглушка IRequestStore.FindById(Int32 requestId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#FindDocumentationByIdAsync(System.Int32)">
            <summary>Задает заглушка IRequestStore.FindDocumentationByIdAsync(Int32 documentationId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#GetChanged(System.Object)">
            <summary>Задает заглушка IRequestStore.GetChanged(Object entity)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#UpdateAsync(LecOnline.Core.Meeting)">
            <summary>Задает заглушка IRequestStore.UpdateAsync(Meeting meeting)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#UpdateAsync(LecOnline.Core.MeetingAttendee)">
            <summary>Задает заглушка IRequestStore.UpdateAsync(MeetingAttendee attendee)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#UpdateAsync(LecOnline.Core.Request)">
            <summary>Задает заглушка IRequestStore.UpdateAsync(Request request)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.MeetingChatMessagesGet">
            <summary>Задает stub IRequestStore.get_MeetingChatMessages()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.RequestsGet">
            <summary>Задает stub IRequestStore.get_Requests()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubIRequestStore.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.UpdateAsyncMeeting">
            <summary>Задает stub IRequestStore.UpdateAsync(Meeting meeting)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.UpdateAsyncMeetingAttendee">
            <summary>Задает stub IRequestStore.UpdateAsync(MeetingAttendee attendee)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubIRequestStore.UpdateAsyncRequest">
            <summary>Задает stub IRequestStore.UpdateAsync(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#MeetingChatMessages">
            <summary>Задает stub IRequestStore.get_MeetingChatMessages()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubIRequestStore.loc::LecOnline#Core#IRequestStore#Requests">
            <summary>Задает stub IRequestStore.get_Requests()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection">
            <summary>Тип заглушки LecOnline.Core.LecOnlineConfigurationSection</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.AttachBackingFieldToEmail">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineConfigurationSection.Email как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.AttachBackingFieldToNoReplyAddress">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineConfigurationSection.NoReplyAddress как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.AttachBackingFieldToPhone">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineConfigurationSection.Phone как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.AttachBackingFieldToSendNotificationEmails">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineConfigurationSection.SendNotificationEmails как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.AttachBackingFieldToSkype">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineConfigurationSection.Skype как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Задает заглушка ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.DeserializeElementXmlReaderBoolean">
            <summary>Задает stub ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
            <summary>Задает заглушка ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.DeserializeSectionXmlReader">
            <summary>Задает stub ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ElementPropertyGet">
            <summary>Задает stub ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.EmailGet">
            <summary>Задает stub LecOnlineConfigurationSection.get_Email()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.EmailSetString">
            <summary>Задает stub LecOnlineConfigurationSection.set_Email(String value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.Equals(System.Object)">
            <summary>Задает заглушка ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.EqualsObject">
            <summary>Задает stub ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.GetHashCode">
            <summary>Задает заглушка ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.GetHashCode01">
            <summary>Задает stub ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.GetRuntimeObject">
            <summary>Задает заглушка ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.GetRuntimeObject01">
            <summary>Задает stub ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.GetTransformedAssemblyString(System.String)">
            <summary>Задает заглушка ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.GetTransformedAssemblyStringString">
            <summary>Задает stub ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.GetTransformedTypeString(System.String)">
            <summary>Задает заглушка ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.GetTransformedTypeStringString">
            <summary>Задает stub ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.Init">
            <summary>Задает заглушка ConfigurationElement.Init()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.Init01">
            <summary>Задает stub ConfigurationElement.Init()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.InitializeDefault">
            <summary>Задает заглушка ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.InitializeDefault01">
            <summary>Задает stub ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLecOnlineConfigurationSection</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.IsModified">
            <summary>Задает заглушка ConfigurationSection.IsModified()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.IsModified01">
            <summary>Задает stub ConfigurationSection.IsModified()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.IsReadOnly">
            <summary>Задает заглушка LecOnlineConfigurationSection.IsReadOnly()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.IsReadOnly01">
            <summary>Задает stub LecOnlineConfigurationSection.IsReadOnly()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ListErrors(System.Collections.IList)">
            <summary>Задает заглушка ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ListErrorsIList">
            <summary>Задает stub ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.NoReplyAddressGet">
            <summary>Задает stub LecOnlineConfigurationSection.get_NoReplyAddress()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.NoReplyAddressSetString">
            <summary>Задает stub LecOnlineConfigurationSection.set_NoReplyAddress(String value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Задает заглушка ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Задает stub ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Задает заглушка ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Задает stub ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.OnRequiredPropertyNotFound(System.String)">
            <summary>Задает заглушка ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.OnRequiredPropertyNotFoundString">
            <summary>Задает stub ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.PhoneGet">
            <summary>Задает stub LecOnlineConfigurationSection.get_Phone()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.PhoneSetString">
            <summary>Задает stub LecOnlineConfigurationSection.set_Phone(String value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.PostDeserialize">
            <summary>Задает заглушка ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.PostDeserialize01">
            <summary>Задает stub ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.PreSerialize(System.Xml.XmlWriter)">
            <summary>Задает заглушка ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.PreSerializeXmlWriter">
            <summary>Задает stub ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.PropertiesGet">
            <summary>Задает stub ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.Reset(System.Configuration.ConfigurationElement)">
            <summary>Задает заглушка ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ResetConfigurationElement">
            <summary>Задает stub ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ResetModified">
            <summary>Задает заглушка ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ResetModified01">
            <summary>Задает stub ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SendNotificationEmailsGet">
            <summary>Задает stub LecOnlineConfigurationSection.get_SendNotificationEmails()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SendNotificationEmailsSetBoolean">
            <summary>Задает stub LecOnlineConfigurationSection.set_SendNotificationEmails(Boolean value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Задает заглушка ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SerializeElementXmlWriterBoolean">
            <summary>Задает stub ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>Задает заглушка ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Задает stub ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Задает заглушка ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SerializeToXmlElementXmlWriterString">
            <summary>Задает stub ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SetReadOnly">
            <summary>Задает заглушка ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SetReadOnly01">
            <summary>Задает stub ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>Задает заглушка ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>Задает stub ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>Задает заглушка ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>Задает stub ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Задает заглушка ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>Задает stub ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SkypeGet">
            <summary>Задает stub LecOnlineConfigurationSection.get_Skype()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SkypeSetString">
            <summary>Задает stub LecOnlineConfigurationSection.set_Skype(String value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Задает заглушка ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Задает stub ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.ElementProperty">
            <summary>Задает stub ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.Email">
            <summary>Задает stub LecOnlineConfigurationSection.get_Email()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.NoReplyAddress">
            <summary>Задает stub LecOnlineConfigurationSection.get_NoReplyAddress()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.Phone">
            <summary>Задает stub LecOnlineConfigurationSection.get_Phone()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.Properties">
            <summary>Задает stub ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.SendNotificationEmails">
            <summary>Задает stub LecOnlineConfigurationSection.get_SendNotificationEmails()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineConfigurationSection.Skype">
            <summary>Задает stub LecOnlineConfigurationSection.get_Skype()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubLecOnlineDbEntities">
            <summary>Тип заглушки LecOnline.Core.LecOnlineDbEntities</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToChangesLogs">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.ChangesLogs как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToClients">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.Clients как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToCommittees">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.Committees как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToConfigurations">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.Configurations как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToErrorLogs">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.ErrorLogs как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToMeetingAttendees">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.MeetingAttendees как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToMeetingChatMessages">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.MeetingChatMessages как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToMeetings">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.Meetings как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToRequestActions">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.RequestActions как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToRequestDocumentations">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.RequestDocumentations как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.AttachBackingFieldToRequests">
            <summary>Присоединение делегатов для эмуляции StubLecOnlineDbEntities.Requests как свойства с резервным полем.</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ChangesLogsGet">
            <summary>Задает stub LecOnlineDbEntities.get_ChangesLogs()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ChangesLogsSetDbSetOfChangesLog">
            <summary>Задает stub LecOnlineDbEntities.set_ChangesLogs(DbSet`1&lt;ChangesLog&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ClientsGet">
            <summary>Задает stub LecOnlineDbEntities.get_Clients()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ClientsSetDbSetOfClient">
            <summary>Задает stub LecOnlineDbEntities.set_Clients(DbSet`1&lt;Client&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.CommitteesGet">
            <summary>Задает stub LecOnlineDbEntities.get_Committees()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.CommitteesSetDbSetOfCommittee">
            <summary>Задает stub LecOnlineDbEntities.set_Committees(DbSet`1&lt;Committee&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ConfigurationsGet">
            <summary>Задает stub LecOnlineDbEntities.get_Configurations()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ConfigurationsSetDbSetOfConfiguration">
            <summary>Задает stub LecOnlineDbEntities.set_Configurations(DbSet`1&lt;Configuration&gt; value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.Dispose(System.Boolean)">
            <summary>Задает заглушка DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.DisposeBoolean">
            <summary>Задает stub DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.Equals(System.Object)">
            <summary>Задает заглушка DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.EqualsObject">
            <summary>Задает stub DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ErrorLogsGet">
            <summary>Задает stub LecOnlineDbEntities.get_ErrorLogs()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ErrorLogsSetDbSetOfErrorLog">
            <summary>Задает stub LecOnlineDbEntities.set_ErrorLogs(DbSet`1&lt;ErrorLog&gt; value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.GetHashCode">
            <summary>Задает заглушка DbContext.GetHashCode()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.GetHashCode01">
            <summary>Задает stub DbContext.GetHashCode()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLecOnlineDbEntities</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.MeetingAttendeesGet">
            <summary>Задает stub LecOnlineDbEntities.get_MeetingAttendees()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.MeetingAttendeesSetDbSetOfMeetingAttendee">
            <summary>Задает stub LecOnlineDbEntities.set_MeetingAttendees(DbSet`1&lt;MeetingAttendee&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.MeetingChatMessagesGet">
            <summary>Задает stub LecOnlineDbEntities.get_MeetingChatMessages()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.MeetingChatMessagesSetDbSetOfMeetingChatMessage">
            <summary>Задает stub LecOnlineDbEntities.set_MeetingChatMessages(DbSet`1&lt;MeetingChatMessage&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.MeetingsGet">
            <summary>Задает stub LecOnlineDbEntities.get_Meetings()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.MeetingsSetDbSetOfMeeting">
            <summary>Задает stub LecOnlineDbEntities.set_Meetings(DbSet`1&lt;Meeting&gt; value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Задает заглушка LecOnlineDbEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.OnModelCreatingDbModelBuilder">
            <summary>Задает stub LecOnlineDbEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.RequestActionsGet">
            <summary>Задает stub LecOnlineDbEntities.get_RequestActions()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.RequestActionsSetDbSetOfRequestAction">
            <summary>Задает stub LecOnlineDbEntities.set_RequestActions(DbSet`1&lt;RequestAction&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.RequestDocumentationsGet">
            <summary>Задает stub LecOnlineDbEntities.get_RequestDocumentations()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.RequestDocumentationsSetDbSetOfRequestDocumentation">
            <summary>Задает stub LecOnlineDbEntities.set_RequestDocumentations(DbSet`1&lt;RequestDocumentation&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.RequestsGet">
            <summary>Задает stub LecOnlineDbEntities.get_Requests()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.RequestsSetDbSetOfRequest">
            <summary>Задает stub LecOnlineDbEntities.set_Requests(DbSet`1&lt;Request&gt; value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.SaveChanges">
            <summary>Задает заглушка DbContext.SaveChanges()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.SaveChanges01">
            <summary>Задает stub DbContext.SaveChanges()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.SaveChangesAsync">
            <summary>Задает заглушка DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>Задает заглушка DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.SaveChangesAsync01">
            <summary>Задает stub DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.SaveChangesAsyncCancellationToken">
            <summary>Задает stub DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.Set(System.Type)">
            <summary>Задает заглушка DbContext.Set(Type entityType)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.Set``1">
            <summary>Задает заглушка DbContext.Set()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.SetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{``0}})">
            <summary>Задает заглушки Set()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.SetType">
            <summary>Задает stub DbContext.Set(Type entityType)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Задает заглушка DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ShouldValidateEntityDbEntityEntry">
            <summary>Задает stub DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ToString">
            <summary>Задает заглушка DbContext.ToString()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ToString01">
            <summary>Задает stub DbContext.ToString()</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Задает заглушка DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Задает stub DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ChangesLogs">
            <summary>Задает stub LecOnlineDbEntities.get_ChangesLogs()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.Clients">
            <summary>Задает stub LecOnlineDbEntities.get_Clients()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.Committees">
            <summary>Задает stub LecOnlineDbEntities.get_Committees()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.Configurations">
            <summary>Задает stub LecOnlineDbEntities.get_Configurations()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.ErrorLogs">
            <summary>Задает stub LecOnlineDbEntities.get_ErrorLogs()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.MeetingAttendees">
            <summary>Задает stub LecOnlineDbEntities.get_MeetingAttendees()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.MeetingChatMessages">
            <summary>Задает stub LecOnlineDbEntities.get_MeetingChatMessages()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.Meetings">
            <summary>Задает stub LecOnlineDbEntities.get_Meetings()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.RequestActions">
            <summary>Задает stub LecOnlineDbEntities.get_RequestActions()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.RequestDocumentations">
            <summary>Задает stub LecOnlineDbEntities.get_RequestDocumentations()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubLecOnlineDbEntities.Requests">
            <summary>Задает stub LecOnlineDbEntities.get_Requests()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubMeeting">
            <summary>Тип заглушки LecOnline.Core.Meeting</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeeting.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeeting.AttachBackingFieldToMeetingAttendees">
            <summary>Присоединение делегатов для эмуляции StubMeeting.MeetingAttendees как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeeting.AttachBackingFieldToMeetingChatMessages">
            <summary>Присоединение делегатов для эмуляции StubMeeting.MeetingChatMessages как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeeting.AttachBackingFieldToRequest">
            <summary>Присоединение делегатов для эмуляции StubMeeting.Request как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeeting.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMeeting</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubMeeting.MeetingAttendeesGet">
            <summary>Задает stub Meeting.get_MeetingAttendees()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubMeeting.MeetingAttendeesSetICollectionOfMeetingAttendee">
            <summary>Задает stub Meeting.set_MeetingAttendees(ICollection`1&lt;MeetingAttendee&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubMeeting.MeetingChatMessagesGet">
            <summary>Задает stub Meeting.get_MeetingChatMessages()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubMeeting.MeetingChatMessagesSetICollectionOfMeetingChatMessage">
            <summary>Задает stub Meeting.set_MeetingChatMessages(ICollection`1&lt;MeetingChatMessage&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubMeeting.RequestGet">
            <summary>Задает stub Meeting.get_Request()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubMeeting.RequestSetRequest">
            <summary>Задает stub Meeting.set_Request(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeeting.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeeting.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeeting.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeeting.MeetingAttendees">
            <summary>Задает stub Meeting.get_MeetingAttendees()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeeting.MeetingChatMessages">
            <summary>Задает stub Meeting.get_MeetingChatMessages()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeeting.Request">
            <summary>Задает stub Meeting.get_Request()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubMeetingAttendee">
            <summary>Тип заглушки LecOnline.Core.MeetingAttendee</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeetingAttendee.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeetingAttendee.AttachBackingFieldToMeeting">
            <summary>Присоединение делегатов для эмуляции StubMeetingAttendee.Meeting как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeetingAttendee.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMeetingAttendee</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubMeetingAttendee.MeetingGet">
            <summary>Задает stub MeetingAttendee.get_Meeting()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubMeetingAttendee.MeetingSetMeeting">
            <summary>Задает stub MeetingAttendee.set_Meeting(Meeting value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeetingAttendee.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeetingAttendee.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeetingAttendee.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeetingAttendee.Meeting">
            <summary>Задает stub MeetingAttendee.get_Meeting()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubMeetingChatMessage">
            <summary>Тип заглушки LecOnline.Core.MeetingChatMessage</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeetingChatMessage.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeetingChatMessage.AttachBackingFieldToMeeting">
            <summary>Присоединение делегатов для эмуляции StubMeetingChatMessage.Meeting как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubMeetingChatMessage.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMeetingChatMessage</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubMeetingChatMessage.MeetingGet">
            <summary>Задает stub MeetingChatMessage.get_Meeting()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubMeetingChatMessage.MeetingSetMeeting">
            <summary>Задает stub MeetingChatMessage.set_Meeting(Meeting value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeetingChatMessage.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeetingChatMessage.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeetingChatMessage.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubMeetingChatMessage.Meeting">
            <summary>Задает stub MeetingChatMessage.get_Meeting()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubRequest">
            <summary>Тип заглушки LecOnline.Core.Request</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequest.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequest.AttachBackingFieldToBaseRequest">
            <summary>Присоединение делегатов для эмуляции StubRequest.BaseRequest как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequest.AttachBackingFieldToClient">
            <summary>Присоединение делегатов для эмуляции StubRequest.Client как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequest.AttachBackingFieldToCommittee">
            <summary>Присоединение делегатов для эмуляции StubRequest.Committee как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequest.AttachBackingFieldToMeetings">
            <summary>Присоединение делегатов для эмуляции StubRequest.Meetings как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequest.AttachBackingFieldToRequestActions">
            <summary>Присоединение делегатов для эмуляции StubRequest.RequestActions как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequest.AttachBackingFieldToRequestDocumentations">
            <summary>Присоединение делегатов для эмуляции StubRequest.RequestDocumentations как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequest.AttachBackingFieldToSubsequentRequests">
            <summary>Присоединение делегатов для эмуляции StubRequest.SubsequentRequests как свойства с резервным полем.</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.BaseRequestGet">
            <summary>Задает stub Request.get_BaseRequest()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.BaseRequestSetRequest">
            <summary>Задает stub Request.set_BaseRequest(Request value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.ClientGet">
            <summary>Задает stub Request.get_Client()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.ClientSetClient">
            <summary>Задает stub Request.set_Client(Client value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.CommitteeGet">
            <summary>Задает stub Request.get_Committee()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.CommitteeSetCommittee">
            <summary>Задает stub Request.set_Committee(Committee value)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequest.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRequest</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.MeetingsGet">
            <summary>Задает stub Request.get_Meetings()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.MeetingsSetICollectionOfMeeting">
            <summary>Задает stub Request.set_Meetings(ICollection`1&lt;Meeting&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.RequestActionsGet">
            <summary>Задает stub Request.get_RequestActions()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.RequestActionsSetICollectionOfRequestAction">
            <summary>Задает stub Request.set_RequestActions(ICollection`1&lt;RequestAction&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.RequestDocumentationsGet">
            <summary>Задает stub Request.get_RequestDocumentations()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.RequestDocumentationsSetICollectionOfRequestDocumentation">
            <summary>Задает stub Request.set_RequestDocumentations(ICollection`1&lt;RequestDocumentation&gt; value)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.SubsequentRequestsGet">
            <summary>Задает stub Request.get_SubsequentRequests()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequest.SubsequentRequestsSetICollectionOfRequest">
            <summary>Задает stub Request.set_SubsequentRequests(ICollection`1&lt;Request&gt; value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequest.BaseRequest">
            <summary>Задает stub Request.get_BaseRequest()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequest.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequest.Client">
            <summary>Задает stub Request.get_Client()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequest.Committee">
            <summary>Задает stub Request.get_Committee()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequest.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequest.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequest.Meetings">
            <summary>Задает stub Request.get_Meetings()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequest.RequestActions">
            <summary>Задает stub Request.get_RequestActions()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequest.RequestDocumentations">
            <summary>Задает stub Request.get_RequestDocumentations()</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequest.SubsequentRequests">
            <summary>Задает stub Request.get_SubsequentRequests()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubRequestAction">
            <summary>Тип заглушки LecOnline.Core.RequestAction</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestAction.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestAction.AttachBackingFieldToRequest">
            <summary>Присоединение делегатов для эмуляции StubRequestAction.Request как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestAction.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRequestAction</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestAction.RequestGet">
            <summary>Задает stub RequestAction.get_Request()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestAction.RequestSetRequest">
            <summary>Задает stub RequestAction.set_Request(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestAction.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestAction.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestAction.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestAction.Request">
            <summary>Задает stub RequestAction.get_Request()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubRequestActionProvider">
            <summary>Тип заглушки LecOnline.Core.RequestActionProvider</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestActionProvider.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestActionProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRequestActionProvider</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestActionProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestActionProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestActionProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubRequestDocumentation">
            <summary>Тип заглушки LecOnline.Core.RequestDocumentation</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestDocumentation.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestDocumentation.AttachBackingFieldToRequest">
            <summary>Присоединение делегатов для эмуляции StubRequestDocumentation.Request как свойства с резервным полем.</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestDocumentation.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRequestDocumentation</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestDocumentation.RequestGet">
            <summary>Задает stub RequestDocumentation.get_Request()</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestDocumentation.RequestSetRequest">
            <summary>Задает stub RequestDocumentation.set_Request(Request value)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestDocumentation.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestDocumentation.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestDocumentation.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestDocumentation.Request">
            <summary>Задает stub RequestDocumentation.get_Request()</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubRequestManager">
            <summary>Тип заглушки LecOnline.Core.RequestManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestManager.#ctor(LecOnline.Core.IRequestStore,LecOnline.Core.ChangeManager)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestManager.Dispose(System.Boolean)">
            <summary>Задает заглушка RequestManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestManager.DisposeBoolean">
            <summary>Задает stub RequestManager.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestManager.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRequestManager</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestManager.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestManager.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestManager.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubRequestNotifications">
            <summary>Тип заглушки LecOnline.Core.RequestNotifications</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestNotifications.#ctor(LecOnline.Core.RequestManager,LecOnline.Core.ApplicationUserManager)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestNotifications.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRequestNotifications</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestNotifications.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestNotifications.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestNotifications.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubRequestStore">
            <summary>Тип заглушки LecOnline.Core.RequestStore</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.#ctor(LecOnline.Core.LecOnlineDbEntities)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.CreateAsync(LecOnline.Core.Meeting)">
            <summary>Задает заглушка RequestStore.CreateAsync(Meeting meeting)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.CreateAsync(LecOnline.Core.MeetingChatMessage)">
            <summary>Задает заглушка RequestStore.CreateAsync(MeetingChatMessage message)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.CreateAsync(LecOnline.Core.Request)">
            <summary>Задает заглушка RequestStore.CreateAsync(Request request)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.CreateAsync(LecOnline.Core.RequestAction)">
            <summary>Задает заглушка RequestStore.CreateAsync(RequestAction requestAction)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.CreateAsync(LecOnline.Core.RequestDocumentation)">
            <summary>Задает заглушка RequestStore.CreateAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.CreateAsyncMeeting">
            <summary>Задает stub RequestStore.CreateAsync(Meeting meeting)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.CreateAsyncMeetingChatMessage">
            <summary>Задает stub RequestStore.CreateAsync(MeetingChatMessage message)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.CreateAsyncRequest">
            <summary>Задает stub RequestStore.CreateAsync(Request request)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.CreateAsyncRequestAction">
            <summary>Задает stub RequestStore.CreateAsync(RequestAction requestAction)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.CreateAsyncRequestDocumentation">
            <summary>Задает stub RequestStore.CreateAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.DeleteAsync(LecOnline.Core.Request)">
            <summary>Задает заглушка RequestStore.DeleteAsync(Request request)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.DeleteAsync(LecOnline.Core.RequestDocumentation)">
            <summary>Задает заглушка RequestStore.DeleteAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.DeleteAsyncRequest">
            <summary>Задает stub RequestStore.DeleteAsync(Request request)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.DeleteAsyncRequestDocumentation">
            <summary>Задает stub RequestStore.DeleteAsync(RequestDocumentation documentation)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.Dispose(System.Boolean)">
            <summary>Задает заглушка RequestStore.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.DisposeBoolean">
            <summary>Задает stub RequestStore.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.FindById(System.Int32)">
            <summary>Задает заглушка RequestStore.FindById(Int32 requestId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.FindByIdInt32">
            <summary>Задает stub RequestStore.FindById(Int32 requestId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.FindDocumentationByIdAsync(System.Int32)">
            <summary>Задает заглушка RequestStore.FindDocumentationByIdAsync(Int32 documentationId)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.FindDocumentationByIdAsyncInt32">
            <summary>Задает stub RequestStore.FindDocumentationByIdAsync(Int32 documentationId)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRequestStore</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.UpdateAsync(LecOnline.Core.Meeting)">
            <summary>Задает заглушка RequestStore.UpdateAsync(Meeting meeting)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.UpdateAsync(LecOnline.Core.MeetingAttendee)">
            <summary>Задает заглушка RequestStore.UpdateAsync(MeetingAttendee attendee)</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRequestStore.UpdateAsync(LecOnline.Core.Request)">
            <summary>Задает заглушка RequestStore.UpdateAsync(Request request)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.UpdateAsyncMeeting">
            <summary>Задает stub RequestStore.UpdateAsync(Meeting meeting)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.UpdateAsyncMeetingAttendee">
            <summary>Задает stub RequestStore.UpdateAsync(MeetingAttendee attendee)</summary>
        </member>
        <member name="F:LecOnline.Core.Fakes.StubRequestStore.UpdateAsyncRequest">
            <summary>Задает stub RequestStore.UpdateAsync(Request request)</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestStore.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestStore.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRequestStore.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubRoleNames">
            <summary>Тип заглушки LecOnline.Core.RoleNames</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRoleNames.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubRoleNames.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRoleNames</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRoleNames.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRoleNames.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubRoleNames.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubSidebarItem">
            <summary>Тип заглушки LecOnline.Core.SidebarItem</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubSidebarItem.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubSidebarItem.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSidebarItem</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubSidebarItem.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubSidebarItem.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubSidebarItem.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubSidebarManager">
            <summary>Тип заглушки LecOnline.Core.SidebarManager</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubSidebarManager.#ctor(System.Func{System.Security.Claims.ClaimsPrincipal})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubSidebarManager.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSidebarManager</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubSidebarManager.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubSidebarManager.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubSidebarManager.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:LecOnline.Core.Fakes.StubUserActionProvider">
            <summary>Тип заглушки LecOnline.Core.UserActionProvider</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubUserActionProvider.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:LecOnline.Core.Fakes.StubUserActionProvider.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUserActionProvider</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubUserActionProvider.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubUserActionProvider.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:LecOnline.Core.Fakes.StubUserActionProvider.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
    </members>
</doc>
