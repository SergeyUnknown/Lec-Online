@model LecOnline.Models.Request.RequestsListViewModel
@{
    var context = this.Context.GetOwinContext();
    var actionsManager = context.Get<ActionsManager>();
    var sidebarManager = context.Get<SidebarManager>();
    var userItem = sidebarManager.FindById("Requests");
    userItem.IsOpen = true;
    userItem.IsActive = true;
    var allUserItem = sidebarManager.FindById("Requests.All");
    allUserItem.IsActive = true;
    
    var fitler = this.Model.Filter;
    int pageSize = UIConfiguration.PageSize;
    if (!int.TryParse(Request["PageSize"], out pageSize))
    {
        pageSize = UIConfiguration.PageSize;
    }

    var grid = new WebGrid(this.Model.Items,
        rowsPerPage: pageSize,
        defaultSort: "Title");
}
<div class="page-header">
    <h1>
        @Resources.PageRequestsTitle
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            @Resources.PageAllRequestsTitle
        </small>
    </h1>
</div>
@if (actionsManager.IsOperationAllowed<Request>("Common.Create"))
{
    <div class="row">
        <div class="col-sm-12">
            <a href="@Url.Action("Create")" class="btn btn-sm btn-primary">
                <i class="ace-icon fa fa-plus align-top bigger-125"></i>
                @Resources.Create
            </a>
        </div>
    </div>
    <div class="hr hr-dotted hr-16"></div>
}
<div class="dataTables_wrapper">
    @using (Html.BeginForm("Index", "Request", FormMethod.Get, new { @class = "form-inline" }))
    {
        @Html.EditorFor(_ => _.Filter)
        <button type="submit" class="btn btn-default">@Resources.Filter</button>
    }
    <div class="hr hr-dotted hr-16"></div>
    <table class="table table-striped table-bordered table-hover dataTable">
        <thead>
            <tr>
                <th class="sorting">
                    <a href="@grid.GetSortUrl("Id")">
                        @Resources.FieldId
                    </a>
                </th>
                <th class="sorting">
                    <a href="@grid.GetSortUrl("Title")">
                        @Resources.FieldTitle
                    </a>
                </th>
                <th class="sorting">
                    <a href="@grid.GetSortUrl("Client.CompanyName")">
                        @Resources.FieldClient
                    </a>
                </th>
                <th class="sorting">
                    <a href="@grid.GetSortUrl("Created")">
                        @Resources.FieldCreatedDate
                    </a>
                </th>

                <th class="sorting">
                    <a href="@grid.GetSortUrl("CreatedBy")">
                        @Resources.FieldCreatedBy
                    </a>
                </th>

                <th class="sorting">
                    <a href="@grid.GetSortUrl("Accepted")">
                        @Resources.FieldAcceptedDate
                    </a>
                </th>

                <th class="sorting">
                    <a href="@grid.GetSortUrl("AcceptedBy")">
                        @Resources.FieldAcceptedBy
                    </a>
                </th>
                <th class="sorting">@Resources.FieldStatus</th>
                <th class="sorting">@Resources.FieldDocumentation</th>

                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var userRow in grid.Rows)
            {
                LecOnline.Core.Request request = userRow.Value;
                <tr>
                    <td>
                        <a href="@Url.Action("Details", new { id = request.Id })" title="@request.Id">@request.Id</a>
                    </td>
                    <td style="width: 400px">
                        <a href="@Url.Action("Details", new { id = request.Id })" title="@request.Title">@request.Title.Ellipsis(80)</a>
                    </td>
                    <td>@request.Client.CompanyName</td>
                    <td>@request.Created</td>
                    <td>@Html.Partial("_UserByEmail", request.CreatedBy)</td>
                    <td>@request.Accepted</td>
                    <td>@Html.Partial("_UserByEmail", request.AcceptedBy ?? string.Empty)</td>
                    <td>@Html.Partial("_RequestStatus", request.Status)</td>
                    <td>@Html.Partial("_RequestDocumentation", request)</td>

                    <td>
                        @Html.Partial("_GridItemMenu", request)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @Html.Partial("_Pager", grid)
</div>
